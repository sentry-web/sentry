{
  "version": 3,
  "sources": ["../../react-day-picker/src/DayPicker.tsx", "../../react-day-picker/src/UI.ts", "../../react-day-picker/src/helpers/getClassNamesForModifiers.ts", "../../react-day-picker/src/components/custom-components.tsx", "../../react-day-picker/src/components/Button.tsx", "../../react-day-picker/src/components/CaptionLabel.tsx", "../../react-day-picker/src/components/Chevron.tsx", "../../react-day-picker/src/components/Day.tsx", "../../react-day-picker/src/components/DayButton.tsx", "../../react-day-picker/src/components/Dropdown.tsx", "../../react-day-picker/src/components/DropdownNav.tsx", "../../react-day-picker/src/components/Footer.tsx", "../../react-day-picker/src/components/Month.tsx", "../../react-day-picker/src/components/MonthCaption.tsx", "../../react-day-picker/src/components/MonthGrid.tsx", "../../react-day-picker/src/components/Months.tsx", "../../react-day-picker/src/components/MonthsDropdown.tsx", "../../react-day-picker/src/useDayPicker.ts", "../../react-day-picker/src/components/Nav.tsx", "../../react-day-picker/src/components/NextMonthButton.tsx", "../../react-day-picker/src/components/Option.tsx", "../../react-day-picker/src/components/PreviousMonthButton.tsx", "../../react-day-picker/src/components/Root.tsx", "../../react-day-picker/src/components/Select.tsx", "../../react-day-picker/src/components/Week.tsx", "../../react-day-picker/src/components/Weekday.tsx", "../../react-day-picker/src/components/Weekdays.tsx", "../../react-day-picker/src/components/WeekNumber.tsx", "../../react-day-picker/src/components/WeekNumberHeader.tsx", "../../react-day-picker/src/components/Weeks.tsx", "../../react-day-picker/src/components/YearsDropdown.tsx", "../../react-day-picker/src/helpers/getComponents.ts", "../../react-day-picker/src/helpers/getDataAttributes.tsx", "../../date-fns/constants.js", "../../date-fns/constructFrom.js", "../../date-fns/toDate.js", "../../date-fns/addDays.js", "../../date-fns/addMonths.js", "../../date-fns/addWeeks.js", "../../date-fns/addYears.js", "../../date-fns/_lib/getTimezoneOffsetInMilliseconds.js", "../../date-fns/_lib/normalizeDates.js", "../../date-fns/startOfDay.js", "../../date-fns/differenceInCalendarDays.js", "../../date-fns/differenceInCalendarMonths.js", "../../date-fns/_lib/defaultOptions.js", "../../date-fns/endOfWeek.js", "../../date-fns/endOfISOWeek.js", "../../date-fns/endOfMonth.js", "../../date-fns/endOfYear.js", "../../date-fns/locale/en-US/_lib/formatDistance.js", "../../date-fns/locale/_lib/buildFormatLongFn.js", "../../date-fns/locale/en-US/_lib/formatLong.js", "../../date-fns/locale/en-US/_lib/formatRelative.js", "../../date-fns/locale/_lib/buildLocalizeFn.js", "../../date-fns/locale/en-US/_lib/localize.js", "../../date-fns/locale/_lib/buildMatchFn.js", "../../date-fns/locale/_lib/buildMatchPatternFn.js", "../../date-fns/locale/en-US/_lib/match.js", "../../date-fns/locale/en-US.js", "../../date-fns/startOfYear.js", "../../date-fns/getDayOfYear.js", "../../date-fns/startOfWeek.js", "../../date-fns/startOfISOWeek.js", "../../date-fns/getISOWeekYear.js", "../../date-fns/startOfISOWeekYear.js", "../../date-fns/getISOWeek.js", "../../date-fns/getWeekYear.js", "../../date-fns/startOfWeekYear.js", "../../date-fns/getWeek.js", "../../date-fns/_lib/addLeadingZeros.js", "../../date-fns/_lib/format/lightFormatters.js", "../../date-fns/_lib/format/formatters.js", "../../date-fns/_lib/format/longFormatters.js", "../../date-fns/_lib/protectedTokens.js", "../../date-fns/isDate.js", "../../date-fns/isValid.js", "../../date-fns/format.js", "../../date-fns/isAfter.js", "../../date-fns/isBefore.js", "../../date-fns/isSameDay.js", "../../date-fns/isSameMonth.js", "../../date-fns/isSameYear.js", "../../date-fns/max.js", "../../date-fns/min.js", "../../date-fns/getDaysInMonth.js", "../../date-fns/setMonth.js", "../../date-fns/setYear.js", "../../date-fns/startOfMonth.js", "../../react-day-picker/src/lib/dateLib.ts", "../../react-day-picker/src/helpers/getDateLib.ts", "../../react-day-picker/src/helpers/getDefaultClassNames.ts", "../../react-day-picker/src/formatters/index.ts", "../../@date-fns/tz/constants/index.js", "../../@date-fns/tz/tzOffset/index.js", "../../@date-fns/tz/date/mini.js", "../../@date-fns/tz/date/index.js", "../../react-day-picker/src/formatters/formatCaption.ts", "../../react-day-picker/src/formatters/formatDay.ts", "../../react-day-picker/src/formatters/formatMonthDropdown.ts", "../../react-day-picker/src/formatters/formatWeekNumber.ts", "../../react-day-picker/src/formatters/formatWeekNumberHeader.ts", "../../react-day-picker/src/formatters/formatWeekdayName.ts", "../../react-day-picker/src/formatters/formatYearDropdown.ts", "../../react-day-picker/src/helpers/getFormatters.ts", "../../react-day-picker/src/helpers/getMonthOptions.ts", "../../react-day-picker/src/helpers/getStyleForModifiers.ts", "../../react-day-picker/src/helpers/getWeekdays.ts", "../../react-day-picker/src/helpers/getYearOptions.ts", "../../react-day-picker/src/labels/index.ts", "../../react-day-picker/src/labels/labelGrid.ts", "../../react-day-picker/src/labels/labelGridcell.ts", "../../react-day-picker/src/labels/labelDayButton.ts", "../../react-day-picker/src/labels/labelNav.ts", "../../react-day-picker/src/labels/labelMonthDropdown.ts", "../../react-day-picker/src/labels/labelNext.ts", "../../react-day-picker/src/labels/labelPrevious.ts", "../../react-day-picker/src/labels/labelWeekday.ts", "../../react-day-picker/src/labels/labelWeekNumber.ts", "../../react-day-picker/src/labels/labelWeekNumberHeader.ts", "../../react-day-picker/src/labels/labelYearDropdown.ts", "../../react-day-picker/src/useCalendar.ts", "../../react-day-picker/src/helpers/getDates.ts", "../../react-day-picker/src/helpers/getDays.ts", "../../react-day-picker/src/helpers/getDisplayMonths.ts", "../../react-day-picker/src/helpers/getInitialMonth.ts", "../../react-day-picker/src/classes/CalendarDay.ts", "../../react-day-picker/src/classes/CalendarMonth.ts", "../../react-day-picker/src/classes/CalendarWeek.ts", "../../react-day-picker/src/helpers/getMonths.ts", "../../react-day-picker/src/helpers/getNavMonth.ts", "../../react-day-picker/src/helpers/getNextMonth.ts", "../../react-day-picker/src/helpers/getPreviousMonth.ts", "../../react-day-picker/src/helpers/getWeeks.ts", "../../react-day-picker/src/helpers/useControlledValue.ts", "../../react-day-picker/src/useFocus.ts", "../../react-day-picker/src/helpers/calculateFocusTarget.ts", "../../react-day-picker/src/utils/rangeIncludesDate.ts", "../../react-day-picker/src/utils/typeguards.ts", "../../react-day-picker/src/utils/dateMatchModifiers.ts", "../../react-day-picker/src/helpers/getFocusableDate.ts", "../../react-day-picker/src/helpers/getNextFocus.tsx", "../../react-day-picker/src/useGetModifiers.tsx", "../../react-day-picker/src/selection/useMulti.tsx", "../../react-day-picker/src/utils/addToRange.ts", "../../react-day-picker/src/selection/useRange.tsx", "../../react-day-picker/src/selection/useSingle.tsx", "../../react-day-picker/src/useSelection.ts", "../../react-day-picker/src/types/deprecated.ts"],
  "sourcesContent": ["import React, { useCallback, useMemo } from \"react\";\nimport type {\n  ChangeEventHandler,\n  MouseEvent,\n  FocusEvent,\n  KeyboardEvent\n} from \"react\";\n\nimport { UI, DayFlag, SelectionState } from \"./UI.js\";\nimport type { CalendarDay } from \"./classes/CalendarDay.js\";\nimport { getClassNamesForModifiers } from \"./helpers/getClassNamesForModifiers.js\";\nimport { getComponents } from \"./helpers/getComponents.js\";\nimport { getDataAttributes } from \"./helpers/getDataAttributes.js\";\nimport { getDateLib } from \"./helpers/getDateLib.js\";\nimport { getDefaultClassNames } from \"./helpers/getDefaultClassNames.js\";\nimport { getFormatters } from \"./helpers/getFormatters.js\";\nimport { getMonthOptions } from \"./helpers/getMonthOptions.js\";\nimport { getStyleForModifiers } from \"./helpers/getStyleForModifiers.js\";\nimport { getWeekdays } from \"./helpers/getWeekdays.js\";\nimport { getYearOptions } from \"./helpers/getYearOptions.js\";\nimport * as defaultLabels from \"./labels/index.js\";\nimport type { FormatOptions, LabelOptions } from \"./lib/dateLib.js\";\nimport { enUS } from \"./lib/locales.js\";\nimport type {\n  DayPickerProps,\n  Modifiers,\n  MoveFocusBy,\n  MoveFocusDir,\n  SelectedValue,\n  SelectHandler\n} from \"./types/index.js\";\nimport { useCalendar } from \"./useCalendar.js\";\nimport { type DayPickerContext, dayPickerContext } from \"./useDayPicker.js\";\nimport { useFocus } from \"./useFocus.js\";\nimport { useGetModifiers } from \"./useGetModifiers.js\";\nimport { useSelection } from \"./useSelection.js\";\nimport { rangeIncludesDate } from \"./utils/rangeIncludesDate.js\";\nimport { isDateRange } from \"./utils/typeguards.js\";\n\n/**\n * Render the date picker calendar.\n *\n * @group DayPicker\n * @see https://daypicker.dev\n */\nexport function DayPicker(props: DayPickerProps) {\n  const { components, formatters, labels, dateLib, locale, classNames } =\n    useMemo(\n      () => ({\n        dateLib: getDateLib(props.dateLib),\n        components: getComponents(props.components),\n        formatters: getFormatters(props.formatters),\n        labels: { ...defaultLabels, ...props.labels },\n        locale: { ...enUS, ...props.locale },\n        classNames: { ...getDefaultClassNames(), ...props.classNames }\n      }),\n      [\n        props.classNames,\n        props.components,\n        props.dateLib,\n        props.formatters,\n        props.labels,\n        props.locale\n      ]\n    );\n\n  const {\n    captionLayout,\n    firstWeekContainsDate,\n    mode,\n    onDayBlur,\n    onDayClick,\n    onDayFocus,\n    onDayKeyDown,\n    onDayMouseEnter,\n    onDayMouseLeave,\n    onNextClick,\n    onPrevClick,\n    showWeekNumber,\n    styles,\n    useAdditionalDayOfYearTokens,\n    useAdditionalWeekYearTokens,\n    weekStartsOn\n  } = props;\n\n  const formatOptions: FormatOptions = {\n    locale,\n    weekStartsOn,\n    firstWeekContainsDate,\n    useAdditionalWeekYearTokens,\n    useAdditionalDayOfYearTokens\n  };\n\n  const labelOptions: LabelOptions = formatOptions;\n\n  const {\n    formatCaption,\n    formatDay,\n    formatMonthDropdown,\n    formatWeekNumber,\n    formatWeekNumberHeader,\n    formatWeekdayName,\n    formatYearDropdown\n  } = formatters;\n\n  const calendar = useCalendar(props, dateLib);\n\n  const {\n    days,\n    months,\n    navStart,\n    navEnd,\n    previousMonth,\n    nextMonth,\n    goToMonth\n  } = calendar;\n\n  const getModifiers = useGetModifiers(days, props, dateLib);\n\n  const {\n    isSelected,\n    select,\n    selected: selectedValue\n  } = useSelection(props, dateLib) ?? {};\n\n  const { blur, focused, isFocusTarget, moveFocus, setFocused } = useFocus(\n    props,\n    calendar,\n    getModifiers,\n    isSelected ?? (() => false),\n    dateLib\n  );\n\n  const {\n    labelDayButton,\n    labelGridcell,\n    labelGrid,\n    labelMonthDropdown,\n    labelNav,\n    labelWeekday,\n    labelWeekNumber,\n    labelWeekNumberHeader,\n    labelYearDropdown\n  } = labels;\n\n  const weekdays = useMemo(\n    () =>\n      getWeekdays(\n        locale,\n        props.weekStartsOn,\n        props.ISOWeek,\n        props.timeZone,\n        dateLib\n      ),\n    [dateLib, locale, props.ISOWeek, props.timeZone, props.weekStartsOn]\n  );\n\n  const isInteractive = mode !== undefined || onDayClick !== undefined;\n\n  const handlePreviousClick = useCallback(() => {\n    if (!previousMonth) return;\n    goToMonth(previousMonth);\n    onPrevClick?.(previousMonth);\n  }, [previousMonth, goToMonth, onPrevClick]);\n\n  const handleNextClick = useCallback(() => {\n    if (!nextMonth) return;\n    goToMonth(nextMonth);\n    onNextClick?.(nextMonth);\n  }, [goToMonth, nextMonth, onNextClick]);\n\n  const handleDayClick = useCallback(\n    (day: CalendarDay, m: Modifiers) => (e: MouseEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setFocused(day);\n      select?.(day.date, m, e);\n      onDayClick?.(day.date, m, e);\n    },\n    [select, onDayClick, setFocused]\n  );\n\n  const handleDayFocus = useCallback(\n    (day: CalendarDay, m: Modifiers) => (e: FocusEvent) => {\n      setFocused(day);\n      onDayFocus?.(day.date, m, e);\n    },\n    [onDayFocus, setFocused]\n  );\n\n  const handleDayBlur = useCallback(\n    (day: CalendarDay, m: Modifiers) => (e: FocusEvent) => {\n      blur();\n      onDayBlur?.(day.date, m, e);\n    },\n    [blur, onDayBlur]\n  );\n\n  const handleDayKeyDown = useCallback(\n    (day: CalendarDay, modifiers: Modifiers) => (e: KeyboardEvent) => {\n      const keyMap: Record<string, [MoveFocusBy, MoveFocusDir]> = {\n        ArrowLeft: [\"day\", props.dir === \"rtl\" ? \"after\" : \"before\"],\n        ArrowRight: [\"day\", props.dir === \"rtl\" ? \"before\" : \"after\"],\n        ArrowDown: [\"week\", \"after\"],\n        ArrowUp: [\"week\", \"before\"],\n        PageUp: [e.shiftKey ? \"year\" : \"month\", \"before\"],\n        PageDown: [e.shiftKey ? \"year\" : \"month\", \"after\"],\n        Home: [\"startOfWeek\", \"before\"],\n        End: [\"endOfWeek\", \"after\"]\n      };\n      if (keyMap[e.key]) {\n        e.preventDefault();\n        e.stopPropagation();\n        const [moveBy, moveDir] = keyMap[e.key];\n        moveFocus(moveBy, moveDir);\n      }\n      onDayKeyDown?.(day.date, modifiers, e);\n    },\n    [moveFocus, onDayKeyDown, props.dir]\n  );\n\n  const handleDayMouseEnter = useCallback(\n    (day: CalendarDay, modifiers: Modifiers) => (e: MouseEvent) => {\n      onDayMouseEnter?.(day.date, modifiers, e);\n    },\n    [onDayMouseEnter]\n  );\n\n  const handleDayMouseLeave = useCallback(\n    (day: CalendarDay, modifiers: Modifiers) => (e: MouseEvent) => {\n      onDayMouseLeave?.(day.date, modifiers, e);\n    },\n    [onDayMouseLeave]\n  );\n\n  const { className, style } = useMemo(\n    () => ({\n      className: [classNames[UI.Root], props.className]\n        .filter(Boolean)\n        .join(\" \"),\n      style: { ...styles?.[UI.Root], ...props.style }\n    }),\n    [classNames, props.className, props.style, styles]\n  );\n\n  const dataAttributes = getDataAttributes(props);\n\n  const contextValue: DayPickerContext<DayPickerProps> = {\n    selected: selectedValue as SelectedValue<DayPickerProps>,\n    select: select as SelectHandler<DayPickerProps>,\n    isSelected,\n    months,\n    nextMonth,\n    previousMonth,\n    goToMonth,\n    getModifiers,\n    components,\n    classNames,\n    styles,\n    labels,\n    formatters\n  };\n\n  return (\n    <dayPickerContext.Provider value={contextValue}>\n      <components.Root\n        className={className}\n        style={style}\n        dir={props.dir}\n        id={props.id}\n        lang={props.lang}\n        nonce={props.nonce}\n        title={props.title}\n        {...dataAttributes}\n      >\n        <components.Months\n          className={classNames[UI.Months]}\n          style={styles?.[UI.Months]}\n        >\n          {!props.hideNavigation && (\n            <components.Nav\n              className={classNames[UI.Nav]}\n              style={styles?.[UI.Nav]}\n              aria-label={labelNav()}\n              onPreviousClick={handlePreviousClick}\n              onNextClick={handleNextClick}\n              previousMonth={previousMonth}\n              nextMonth={nextMonth}\n            />\n          )}\n          {months.map((calendarMonth, displayIndex) => {\n            const handleMonthChange: ChangeEventHandler<HTMLSelectElement> = (\n              e\n            ) => {\n              const selectedMonth = Number(\n                (e.target as HTMLSelectElement).value\n              );\n              const month = dateLib.setMonth(\n                dateLib.startOfMonth(calendarMonth.date),\n                selectedMonth\n              );\n              goToMonth(month);\n            };\n\n            const handleYearChange: ChangeEventHandler<HTMLSelectElement> = (\n              e\n            ) => {\n              const month = dateLib.setYear(\n                dateLib.startOfMonth(calendarMonth.date),\n                Number(e.target.value)\n              );\n              goToMonth(month);\n            };\n\n            const dropdownMonths = getMonthOptions(\n              calendarMonth.date,\n              navStart,\n              navEnd,\n              formatters,\n              locale,\n              dateLib\n            );\n\n            const dropdownYears = getYearOptions(\n              months[0].date,\n              navStart,\n              navEnd,\n              formatters,\n              dateLib\n            );\n\n            return (\n              <components.Month\n                className={classNames[UI.Month]}\n                style={styles?.[UI.Month]}\n                key={displayIndex}\n                displayIndex={displayIndex}\n                calendarMonth={calendarMonth}\n              >\n                <components.MonthCaption\n                  className={classNames[UI.MonthCaption]}\n                  style={styles?.[UI.MonthCaption]}\n                  calendarMonth={calendarMonth}\n                  displayIndex={displayIndex}\n                >\n                  {captionLayout?.startsWith(\"dropdown\") ? (\n                    <components.DropdownNav\n                      className={classNames[UI.Dropdowns]}\n                      style={styles?.[UI.Dropdowns]}\n                    >\n                      {captionLayout === \"dropdown\" ||\n                      captionLayout === \"dropdown-months\" ? (\n                        <components.MonthsDropdown\n                          className={classNames[UI.MonthsDropdown]}\n                          aria-label={labelMonthDropdown()}\n                          classNames={classNames}\n                          components={components}\n                          disabled={Boolean(props.disableNavigation)}\n                          onChange={handleMonthChange}\n                          options={dropdownMonths}\n                          style={styles?.[UI.Dropdown]}\n                          value={calendarMonth.date.getMonth()}\n                        />\n                      ) : (\n                        <span role=\"status\" aria-live=\"polite\">\n                          {formatMonthDropdown(calendarMonth.date.getMonth())}\n                        </span>\n                      )}\n                      {captionLayout === \"dropdown\" ||\n                      captionLayout === \"dropdown-years\" ? (\n                        <components.YearsDropdown\n                          className={classNames[UI.YearsDropdown]}\n                          aria-label={labelYearDropdown(labelOptions)}\n                          classNames={classNames}\n                          components={components}\n                          disabled={Boolean(props.disableNavigation)}\n                          onChange={handleYearChange}\n                          options={dropdownYears}\n                          style={styles?.[UI.Dropdown]}\n                          value={calendarMonth.date.getFullYear()}\n                        />\n                      ) : (\n                        <span role=\"status\" aria-live=\"polite\">\n                          {formatYearDropdown(calendarMonth.date.getFullYear())}\n                        </span>\n                      )}\n                    </components.DropdownNav>\n                  ) : (\n                    <components.CaptionLabel\n                      className={classNames[UI.CaptionLabel]}\n                      role=\"status\"\n                      aria-live=\"polite\"\n                    >\n                      {formatCaption(\n                        calendarMonth.date,\n                        formatOptions,\n                        dateLib\n                      )}\n                    </components.CaptionLabel>\n                  )}\n                </components.MonthCaption>\n                <components.MonthGrid\n                  role=\"grid\"\n                  aria-multiselectable={mode === \"multiple\" || mode === \"range\"}\n                  aria-label={\n                    labelGrid(calendarMonth.date, labelOptions, dateLib) ||\n                    undefined\n                  }\n                  className={classNames[UI.MonthGrid]}\n                  style={styles?.[UI.MonthGrid]}\n                >\n                  {!props.hideWeekdays && (\n                    <components.Weekdays\n                      className={classNames[UI.Weekdays]}\n                      style={styles?.[UI.Weekdays]}\n                    >\n                      {showWeekNumber && (\n                        <components.WeekNumberHeader\n                          aria-label={labelWeekNumberHeader(labelOptions)}\n                          className={classNames[UI.WeekNumberHeader]}\n                          style={styles?.[UI.WeekNumberHeader]}\n                          scope=\"col\"\n                        >\n                          {formatWeekNumberHeader()}\n                        </components.WeekNumberHeader>\n                      )}\n                      {weekdays.map((weekday, i) => (\n                        <components.Weekday\n                          aria-label={labelWeekday(\n                            weekday,\n                            labelOptions,\n                            dateLib\n                          )}\n                          className={classNames[UI.Weekday]}\n                          key={i}\n                          style={styles?.[UI.Weekday]}\n                          scope=\"col\"\n                        >\n                          {formatWeekdayName(weekday, formatOptions, dateLib)}\n                        </components.Weekday>\n                      ))}\n                    </components.Weekdays>\n                  )}\n                  <components.Weeks\n                    className={classNames[UI.Weeks]}\n                    style={styles?.[UI.Weeks]}\n                  >\n                    {calendarMonth.weeks.map((week, weekIndex) => {\n                      return (\n                        <components.Week\n                          className={classNames[UI.Week]}\n                          key={week.weekNumber}\n                          style={styles?.[UI.Week]}\n                          week={week}\n                        >\n                          {showWeekNumber && (\n                            <components.WeekNumber\n                              week={week}\n                              style={styles?.[UI.WeekNumber]}\n                              aria-label={labelWeekNumber(week.weekNumber, {\n                                locale\n                              })}\n                              className={classNames[UI.WeekNumber]}\n                              scope=\"row\"\n                            >\n                              {formatWeekNumber(week.weekNumber)}\n                            </components.WeekNumber>\n                          )}\n                          {week.days.map((day: CalendarDay) => {\n                            const { date } = day;\n                            const modifiers = getModifiers(day);\n\n                            modifiers[DayFlag.focused] =\n                              !modifiers.hidden &&\n                              Boolean(focused?.isEqualTo(day));\n\n                            modifiers[SelectionState.selected] =\n                              !modifiers.disabled &&\n                              (isSelected?.(date) || modifiers.selected);\n\n                            if (isDateRange(selectedValue)) {\n                              // add range modifiers\n                              const { from, to } = selectedValue;\n                              modifiers[SelectionState.range_start] = Boolean(\n                                from && to && dateLib.isSameDay(date, from)\n                              );\n                              modifiers[SelectionState.range_end] = Boolean(\n                                from && to && dateLib.isSameDay(date, to)\n                              );\n                              modifiers[SelectionState.range_middle] =\n                                rangeIncludesDate(\n                                  selectedValue,\n                                  date,\n                                  true,\n                                  dateLib\n                                );\n                            }\n\n                            const style = getStyleForModifiers(\n                              modifiers,\n                              styles,\n                              props.modifiersStyles\n                            );\n\n                            const className = getClassNamesForModifiers(\n                              modifiers,\n                              classNames,\n                              props.modifiersClassNames\n                            );\n\n                            const ariaLabel = !isInteractive\n                              ? labelGridcell(\n                                  date,\n                                  modifiers,\n                                  labelOptions,\n                                  dateLib\n                                )\n                              : undefined;\n\n                            return (\n                              <components.Day\n                                key={`${dateLib.format(date, \"yyyy-MM-dd\")}_${dateLib.format(day.displayMonth, \"yyyy-MM\")}`}\n                                day={day}\n                                modifiers={modifiers}\n                                className={className.join(\" \")}\n                                style={style}\n                                aria-hidden={modifiers.hidden || undefined}\n                                aria-selected={modifiers.selected || undefined}\n                                aria-label={ariaLabel}\n                                data-day={dateLib.format(date, \"yyyy-MM-dd\")}\n                                data-month={\n                                  day.outside\n                                    ? dateLib.format(date, \"yyyy-MM\")\n                                    : undefined\n                                }\n                                data-selected={modifiers.selected || undefined}\n                                data-disabled={modifiers.disabled || undefined}\n                                data-hidden={modifiers.hidden || undefined}\n                                data-outside={day.outside || undefined}\n                                data-focused={modifiers.focused || undefined}\n                                data-today={modifiers.today || undefined}\n                              >\n                                {isInteractive ? (\n                                  <components.DayButton\n                                    className={classNames[UI.DayButton]}\n                                    style={styles?.[UI.DayButton]}\n                                    type=\"button\"\n                                    day={day}\n                                    modifiers={modifiers}\n                                    disabled={modifiers.disabled || undefined}\n                                    tabIndex={isFocusTarget(day) ? 0 : -1}\n                                    aria-label={labelDayButton(\n                                      date,\n                                      modifiers,\n                                      labelOptions,\n                                      dateLib\n                                    )}\n                                    onClick={handleDayClick(day, modifiers)}\n                                    onBlur={handleDayBlur(day, modifiers)}\n                                    onFocus={handleDayFocus(day, modifiers)}\n                                    onKeyDown={handleDayKeyDown(day, modifiers)}\n                                    onMouseEnter={handleDayMouseEnter(\n                                      day,\n                                      modifiers\n                                    )}\n                                    onMouseLeave={handleDayMouseLeave(\n                                      day,\n                                      modifiers\n                                    )}\n                                  >\n                                    {formatDay(date, formatOptions, dateLib)}\n                                  </components.DayButton>\n                                ) : (\n                                  formatDay(day.date, formatOptions, dateLib)\n                                )}\n                              </components.Day>\n                            );\n                          })}\n                        </components.Week>\n                      );\n                    })}\n                  </components.Weeks>\n                </components.MonthGrid>\n              </components.Month>\n            );\n          })}\n        </components.Months>\n        {props.footer && (\n          <components.Footer\n            className={classNames[UI.Footer]}\n            style={styles?.[UI.Footer]}\n            role=\"status\"\n            aria-live=\"polite\"\n          >\n            {props.footer}\n          </components.Footer>\n        )}\n      </components.Root>\n    </dayPickerContext.Provider>\n  );\n}\n", "import { CSSProperties } from \"react\";\n\nimport type { CustomComponents, ClassNames, Styles } from \"./types/index.js\";\n\n/**\n * The UI elements composing DayPicker. These elements are mapped to\n * {@link CustomComponents}, the {@link ClassNames} and the {@link Styles} used by\n * DayPicker.\n *\n * Some of these elements are extended by flags and modifiers.\n */\nexport enum UI {\n  /** The root component displaying the months and the navigation bar. */\n  Root = \"root\",\n  /** The Chevron SVG element used by navigation buttons and dropdowns. */\n  Chevron = \"chevron\",\n  /**\n   * The grid cell with the day's date. Extended by {@link DayFlag} and\n   * {@link SelectionFlag}.\n   */\n  Day = \"day\",\n  /** The button containing the formatted day's date, inside the grid cell. */\n  DayButton = \"day_button\",\n  /** The caption label of the month (when not showing the dropdown navigation). */\n  CaptionLabel = \"caption_label\",\n  /** The container of the dropdown navigation (when enabled). */\n  Dropdowns = \"dropdowns\",\n  /** The dropdown element to select for years and months. */\n  Dropdown = \"dropdown\",\n  /** The container element of the dropdown. */\n  DropdownRoot = \"dropdown_root\",\n  /** The root element of the footer. */\n  Footer = \"footer\",\n  /** The month grid. */\n  MonthGrid = \"month_grid\",\n  /** Contains the dropdown navigation or the caption label. */\n  MonthCaption = \"month_caption\",\n  /** The dropdown with the months. */\n  MonthsDropdown = \"months_dropdown\",\n  /** Wrapper of the month grid. */\n  Month = \"month\",\n  /** The container of the displayed months. */\n  Months = \"months\",\n  /** The navigation bar with the previous and next buttons. */\n  Nav = \"nav\",\n  /**\n   * The next month button in the navigation. *\n   *\n   * @since 9.1.0\n   */\n  NextMonthButton = \"button_next\",\n  /**\n   * The previous month button in the navigation.\n   *\n   * @since 9.1.0\n   */\n  PreviousMonthButton = \"button_previous\",\n  /** The row containing the week. */\n  Week = \"week\",\n  /** The group of row weeks in a month (`tbody`). */\n  Weeks = \"weeks\",\n  /** The column header with the weekday. */\n  Weekday = \"weekday\",\n  /** The row grouping the weekdays in the column headers. */\n  Weekdays = \"weekdays\",\n  /** The cell containing the week number. */\n  WeekNumber = \"week_number\",\n  /** The cell header of the week numbers column. */\n  WeekNumberHeader = \"week_number_header\",\n  /** The dropdown with the years. */\n  YearsDropdown = \"years_dropdown\"\n}\n\n/** The flags for the {@link UI.Day}. */\nexport enum DayFlag {\n  /** The day is disabled. */\n  disabled = \"disabled\",\n  /** The day is hidden. */\n  hidden = \"hidden\",\n  /** The day is outside the current month. */\n  outside = \"outside\",\n  /** The day is focused. */\n  focused = \"focused\",\n  /** The day is today. */\n  today = \"today\"\n}\n\n/**\n * The state that can be applied to the {@link UI.Day} element when in selection\n * mode.\n */\nexport enum SelectionState {\n  /** The day is at the end of a selected range. */\n  range_end = \"range_end\",\n  /** The day is at the middle of a selected range. */\n  range_middle = \"range_middle\",\n  /** The day is at the start of a selected range. */\n  range_start = \"range_start\",\n  /** The day is selected. */\n  selected = \"selected\"\n}\n\n/**\n * Deprecated UI elements and flags.\n *\n * These elements were used in previous version of DayPicker and are kept here\n * to help the transition to the new {@link UI | UI elements}.\n *\n * ```diff\n *   <DayPicker classNames={{\n * -  cell: \"my-cell\",\n * +  day: \"my-cell\",\n * -  day: \"my-day\",\n * +  day_button: \"my-day\",\n * -  day_disabled: \"my-day_disabled\",\n * +  disabled: \"my-day_disabled\",\n *    // etc.\n *   }}/>\n * ```\n *\n * @deprecated\n * @since 9.0.1\n * @see https://daypicker.dev/upgrading\n * @see https://daypicker.dev/docs/styling\n */\nexport type DeprecatedUI<T extends CSSProperties | string> = {\n  /**\n   * This element was applied to the style of any button in DayPicker and it is\n   * replaced by {@link UI.PreviousMonthButton} and {@link UI.NextMonthButton}.\n   *\n   * @deprecated\n   */\n  button: T;\n  /**\n   * This element was resetting the style of any button in DayPicker and it is\n   * replaced by {@link UI.PreviousMonthButton} and {@link UI.NextMonthButton}.\n   *\n   * @deprecated\n   */\n  button_reset: T;\n  /**\n   * This element has been renamed to {@link UI.MonthCaption}.\n   *\n   * @deprecated\n   */\n  caption: T;\n  /**\n   * This element has been removed. Captions are styled via\n   * {@link UI.MonthCaption}.\n   *\n   * @deprecated\n   */\n  caption_between: T;\n  /**\n   * This element has been renamed to {@link UI.Dropdowns}.\n   *\n   * @deprecated\n   */\n  caption_dropdowns: T;\n  /**\n   * This element has been removed. Captions are styled via\n   * {@link UI.MonthCaption}.\n   *\n   * @deprecated\n   */\n  caption_end: T;\n  /**\n   * This element has been removed.\n   *\n   * @deprecated\n   */\n  caption_start: T;\n  /**\n   * This element has been renamed to {@link UI.Day}.\n   *\n   * @deprecated\n   */\n  cell: T;\n  /**\n   * This element has been renamed to {@link DayFlag.disabled}.\n   *\n   * @deprecated\n   */\n  day_disabled: T;\n  /**\n   * This element has been renamed to {@link DayFlag.hidden}.\n   *\n   * @deprecated\n   */\n  day_hidden: T;\n  /**\n   * This element has been renamed to {@link DayFlag.outside}.\n   *\n   * @deprecated\n   */\n  day_outside: T;\n  /**\n   * This element has been renamed to {@link SelectionState.range_end}.\n   *\n   * @deprecated\n   */\n  day_range_end: T;\n  /**\n   * This element has been renamed to {@link SelectionState.range_middle}.\n   *\n   * @deprecated\n   */\n  day_range_middle: T;\n  /**\n   * This element has been renamed to {@link SelectionState.range_start}.\n   *\n   * @deprecated\n   */\n  day_range_start: T;\n  /**\n   * This element has been renamed to {@link SelectionState.selected}.\n   *\n   * @deprecated\n   */\n  day_selected: T;\n  /**\n   * This element has been renamed to {@link DayFlag.today}.\n   *\n   * @deprecated\n   */\n  day_today: T;\n  /**\n   * This element has been removed. The dropdown icon is now {@link UI.Chevron}\n   * inside a {@link UI.CaptionLabel}.\n   *\n   * @deprecated\n   */\n  dropdown_icon: T;\n  /**\n   * This element has been renamed to {@link UI.MonthsDropdown}.\n   *\n   * @deprecated\n   */\n  dropdown_month: T;\n  /**\n   * This element has been renamed to {@link UI.YearsDropdown}.\n   *\n   * @deprecated\n   */\n  dropdown_year: T;\n  /**\n   * This element has been removed.\n   *\n   * @deprecated\n   */\n  head: T;\n  /**\n   * This element has been renamed to {@link UI.Weekday}.\n   *\n   * @deprecated\n   */\n  head_cell: T;\n  /**\n   * This element has been renamed to {@link UI.Weekdays}.\n   *\n   * @deprecated\n   */\n  head_row: T;\n  /**\n   * This flag has been removed. Use `data-multiple-months` in your CSS\n   * selectors.\n   *\n   * @deprecated\n   */\n  multiple_months: T;\n  /**\n   * This element has been removed. To style the navigation buttons, use\n   * {@link UI.PreviousMonthButton} and {@link UI.NextMonthButton}.\n   *\n   * @deprecated\n   */\n  nav_button: T;\n  /**\n   * This element has been renamed to {@link UI.NextMonthButton}.\n   *\n   * @deprecated\n   */\n  nav_button_next: T;\n  /**\n   * This element has been renamed to {@link UI.PreviousMonthButton}.\n   *\n   * @deprecated\n   */\n  nav_button_previous: T;\n  /**\n   * This element has been removed. The dropdown icon is now {@link UI.Chevron}\n   * inside a {@link UI.NextMonthButton} or a {@link UI.PreviousMonthButton}.\n   *\n   * @deprecated\n   */\n  nav_icon: T;\n  /**\n   * This element has been renamed to {@link UI.Week}.\n   *\n   * @deprecated\n   */\n  row: T;\n  /**\n   * This element has been renamed to {@link UI.MonthGrid}.\n   *\n   * @deprecated\n   */\n  table: T;\n  /**\n   * This element has been renamed to {@link UI.Weeks}.\n   *\n   * @deprecated\n   */\n  tbody: T;\n  /**\n   * This element has been removed. The {@link UI.Footer} is now a single element\n   * below the months.\n   *\n   * @deprecated\n   */\n  tfoot: T;\n  /**\n   * This flag has been removed. There are no \"visually hidden\" elements in\n   * DayPicker 9.\n   *\n   * @deprecated\n   */\n  vhidden: T;\n  /**\n   * This element has been renamed. Use {@link UI.WeekNumber} instead.\n   *\n   * @deprecated\n   */\n  weeknumber: T;\n  /**\n   * This flag has been removed. Use `data-week-numbers` in your CSS.\n   *\n   * @deprecated\n   */\n  with_weeknumber: T;\n};\n", "import { DayFlag, SelectionState, UI } from \"../UI.js\";\nimport type { ModifiersClassNames, ClassNames } from \"../types/index.js\";\n\nexport function getClassNamesForModifiers(\n  modifiers: Record<string, boolean>,\n  classNames: ClassNames,\n  modifiersClassNames: ModifiersClassNames = {}\n) {\n  const modifierClassNames = Object.entries(modifiers)\n    .filter(([, active]) => active === true)\n    .reduce(\n      (previousValue, [key]) => {\n        if (modifiersClassNames[key]) {\n          previousValue.push(modifiersClassNames[key as string]);\n        } else if (classNames[DayFlag[key as DayFlag]]) {\n          previousValue.push(classNames[DayFlag[key as DayFlag]]);\n        } else if (classNames[SelectionState[key as SelectionState]]) {\n          previousValue.push(classNames[SelectionState[key as SelectionState]]);\n        }\n        return previousValue;\n      },\n      [classNames[UI.Day]] as string[]\n    );\n\n  return modifierClassNames;\n}\n", "export * from \"./Button.js\";\nexport * from \"./CaptionLabel.js\";\nexport * from \"./Chevron.js\";\nexport * from \"./Day.js\";\nexport * from \"./DayButton.js\";\nexport * from \"./Dropdown.js\";\nexport * from \"./DropdownNav.js\";\nexport * from \"./Footer.js\";\nexport * from \"./Month.js\";\nexport * from \"./MonthCaption.js\";\nexport * from \"./MonthGrid.js\";\nexport * from \"./Months.js\";\nexport * from \"./MonthsDropdown.js\";\nexport * from \"./Nav.js\";\nexport * from \"./NextMonthButton.js\";\nexport * from \"./Option.js\";\nexport * from \"./PreviousMonthButton.js\";\nexport * from \"./Root.js\";\nexport * from \"./Select.js\";\nexport * from \"./Week.js\";\nexport * from \"./Weekday.js\";\nexport * from \"./Weekdays.js\";\nexport * from \"./WeekNumber.js\";\nexport * from \"./WeekNumberHeader.js\";\nexport * from \"./Weeks.js\";\nexport * from \"./YearsDropdown.js\";\n", "import React from \"react\";\n\n/**\n * Render the button elements in the calendar.\n *\n * @private\n * @deprecated Use `PreviousMonthButton` or `@link NextMonthButton` instead.\n */\nexport function Button(props: JSX.IntrinsicElements[\"button\"]) {\n  return <button {...props} />;\n}\n\nexport type ButtonProps = Parameters<typeof Button>[0];\n", "import React from \"react\";\n\n/**\n * Render the label in the month caption.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function CaptionLabel(props: JSX.IntrinsicElements[\"span\"]) {\n  return <span {...props} />;\n}\n\nexport type CaptionLabelProps = Parameters<typeof CaptionLabel>[0];\n", "import React from \"react\";\n\n/**\n * Render the chevron icon used in the navigation buttons and dropdowns.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Chevron(props: {\n  className?: string;\n  /**\n   * The size of the chevron.\n   *\n   * @defaultValue 24\n   */\n  size?: number;\n  /** Set to `true` to disable the chevron. */\n  disabled?: boolean;\n  /** The orientation of the chevron. */\n  orientation?: \"up\" | \"down\" | \"left\" | \"right\";\n}) {\n  const { size = 24, orientation = \"left\", className } = props;\n\n  return (\n    <svg className={className} width={size} height={size} viewBox=\"0 0 24 24\">\n      {orientation === \"up\" && (\n        <polygon points=\"6.77 17 12.5 11.43 18.24 17 20 15.28 12.5 8 5 15.28\" />\n      )}\n      {orientation === \"down\" && (\n        <polygon points=\"6.77 8 12.5 13.57 18.24 8 20 9.72 12.5 17 5 9.72\" />\n      )}\n      {orientation === \"left\" && (\n        <polygon points=\"16 18.112 9.81111111 12 16 5.87733333 14.0888889 4 6 12 14.0888889 20\" />\n      )}\n      {orientation === \"right\" && (\n        <polygon points=\"8 18.612 14.1888889 12.5 8 6.37733333 9.91111111 4.5 18 12.5 9.91111111 20.5\"></polygon>\n      )}\n    </svg>\n  );\n}\n\nexport type ChevronProps = Parameters<typeof Chevron>[0];\n", "import React from \"react\";\n\nimport type { CalendarDay } from \"../classes/index.js\";\nimport type { Modifiers } from \"../types/index.js\";\n\n/**\n * Render the gridcell of a day in the calendar and handle the interaction and\n * the focus with they day.\n *\n * If you need to just change the content of the day cell, consider swapping the\n * `DayDate` component instead.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Day(\n  props: {\n    /** The day to render. */\n    day: CalendarDay;\n    /** The modifiers to apply to the day. */\n    modifiers: Modifiers;\n  } & JSX.IntrinsicElements[\"td\"]\n) {\n  const { day, modifiers, ...tdProps } = props;\n  return <td {...tdProps} />;\n}\n\nexport type DayProps = Parameters<typeof Day>[0];\n", "import React from \"react\";\n\nimport type { CalendarDay } from \"../classes/index.js\";\nimport type { Modifiers } from \"../types/index.js\";\n\n/**\n * Render the button for a day in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function DayButton(\n  props: {\n    /** The day to render. */\n    day: CalendarDay;\n    /** The modifiers for the day. */\n    modifiers: Modifiers;\n  } & JSX.IntrinsicElements[\"button\"]\n) {\n  const { day, modifiers, ...buttonProps } = props;\n\n  const ref = React.useRef<HTMLButtonElement>(null);\n  React.useEffect(() => {\n    if (modifiers.focused) ref.current?.focus();\n  }, [modifiers.focused]);\n  return <button ref={ref} {...buttonProps} />;\n}\n\nexport type DayButtonProps = Parameters<typeof DayButton>[0];\n", "import React from \"react\";\n\nimport { UI } from \"../UI.js\";\nimport type { ClassNames, CustomComponents } from \"../types/index.js\";\n\n/** An option to use in the dropdown. Maps to the `<option>` HTML element. */\nexport type DropdownOption = {\n  /** The value of the option. */\n  value: number;\n  /** The label of the option. */\n  label: string;\n  /**\n   * The dropdown option is disabled when it cannot be selected because out of\n   * the calendar range.\n   */\n  disabled: boolean;\n};\n\n/**\n * Render a dropdown component to use in the navigation bar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Dropdown(\n  props: {\n    /**\n     * @deprecated Use{@link useDayPicker} hook to get the list of internal\n     *   components.\n     */\n    components: CustomComponents;\n    /**\n     * @deprecated Use {@link useDayPicker} hook to get the list of internal\n     *   class names.\n     */\n    classNames: ClassNames;\n    options?: DropdownOption[] | undefined;\n  } & Omit<JSX.IntrinsicElements[\"select\"], \"children\">\n) {\n  const { options, className, components, classNames, ...selectProps } = props;\n\n  const cssClassSelect = [classNames[UI.Dropdown], className].join(\" \");\n\n  const selectedOption = options?.find(\n    ({ value }) => value === selectProps.value\n  );\n  return (\n    <span\n      data-disabled={selectProps.disabled}\n      className={classNames[UI.DropdownRoot]}\n    >\n      <components.Select className={cssClassSelect} {...selectProps}>\n        {options?.map(({ value, label, disabled }) => (\n          <components.Option key={value} value={value} disabled={disabled}>\n            {label}\n          </components.Option>\n        ))}\n      </components.Select>\n      <span className={classNames[UI.CaptionLabel]} aria-hidden>\n        {selectedOption?.label}\n        <components.Chevron\n          orientation=\"down\"\n          size={18}\n          className={classNames[UI.Chevron]}\n        />\n      </span>\n    </span>\n  );\n}\n\nexport type DropdownProps = Parameters<typeof Dropdown>[0];\n", "import React from \"react\";\n\n/**\n * Render the the navigation dropdowns.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function DropdownNav(props: JSX.IntrinsicElements[\"div\"]) {\n  return <div {...props} />;\n}\n\nexport type DropdownNavProps = Parameters<typeof DropdownNav>[0];\n", "import React from \"react\";\n\n/**\n * Component wrapping the footer.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Footer(props: JSX.IntrinsicElements[\"div\"]) {\n  return <div {...props} />;\n}\n\nexport type FooterProps = Parameters<typeof Footer>[0];\n", "import React from \"react\";\n\nimport type { CalendarMonth } from \"../classes/CalendarMonth.js\";\n\n/**\n * Render the grid with the weekday header row and the weeks for the given\n * month.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Month(\n  props: {\n    /** The month where the grid is displayed. */\n    calendarMonth: CalendarMonth;\n    /** The index where this month is displayed. */\n    displayIndex: number;\n  } & JSX.IntrinsicElements[\"div\"]\n) {\n  const { calendarMonth, displayIndex, ...divProps } = props;\n  return <div {...divProps}>{props.children}</div>;\n}\n\nexport type MonthProps = Parameters<typeof Month>[0];\n", "import React from \"react\";\n\nimport type { CalendarMonth } from \"../classes/index.js\";\n\n/**\n * Render the caption of a month in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function MonthCaption(\n  props: {\n    /** The month where the grid is displayed. */\n    calendarMonth: CalendarMonth;\n    /** The index where this month is displayed. */\n    displayIndex: number;\n  } & JSX.IntrinsicElements[\"div\"]\n) {\n  const { calendarMonth, displayIndex, ...divProps } = props;\n  return <div {...divProps} />;\n}\n\nexport type MonthCaptionProps = Parameters<typeof MonthCaption>[0];\n", "import React from \"react\";\n\n/**\n * Render the grid of days in a month.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function MonthGrid(props: JSX.IntrinsicElements[\"table\"]) {\n  return <table {...props} />;\n}\n\nexport type MonthGridProps = Parameters<typeof MonthGrid>[0];\n", "import React from \"react\";\n\n/**\n * Component wrapping the month grids.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Months(props: JSX.IntrinsicElements[\"div\"]) {\n  return <div {...props} />;\n}\n\nexport type MonthsProps = Parameters<typeof Months>[0];\n", "import React from \"react\";\n\nimport { useDayPicker } from \"../useDayPicker.js\";\n\nimport { DropdownProps } from \"./Dropdown.js\";\n\n/**\n * Render the dropdown to navigate between months.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function MonthsDropdown(props: DropdownProps) {\n  const { components } = useDayPicker();\n  return <components.Dropdown {...props} />;\n}\n", "import { createContext, useContext } from \"react\";\n\nimport { CalendarDay } from \"./classes/CalendarDay.js\";\nimport { CalendarMonth } from \"./classes/CalendarMonth.js\";\nimport type { SelectedValue, SelectHandler } from \"./types/selection.js\";\nimport {\n  ClassNames,\n  CustomComponents,\n  Formatters,\n  Labels,\n  Mode,\n  Modifiers,\n  Styles\n} from \"./types/shared.js\";\n\n/** @private */\nexport const dayPickerContext = createContext<\n  | DayPickerContext<{\n      mode?: Mode | undefined;\n      required?: boolean | undefined;\n    }>\n  | undefined\n>(undefined);\n\n/**\n * Represents the context for the DayPicker component, providing various\n * properties and methods to interact with the calendar.\n *\n * @template T - The type of the DayPicker props, which must optionally include\n *   `mode` and `required` properties. This type can be used to refine the type\n *   returned by the hook.\n */\nexport type DayPickerContext<\n  T extends { mode?: Mode | undefined; required?: boolean | undefined }\n> = {\n  /** The months displayed in the calendar. */\n  months: CalendarMonth[];\n  /** The next month to display. */\n  nextMonth: Date | undefined;\n  /** The previous month to display. */\n  previousMonth: Date | undefined;\n  /** Navigate to the specified month. Will fire the `onMonthChange` callback. */\n  goToMonth: (month: Date) => void;\n  /** Returns the modifiers for the given day. */\n  getModifiers: (day: CalendarDay) => Modifiers;\n  /** The selected date(s). */\n  selected: SelectedValue<T> | undefined;\n  /** Set a selection. */\n  select: SelectHandler<T> | undefined;\n  /** Whether the given date is selected. */\n  isSelected: ((date: Date) => boolean) | undefined;\n  /** The components used internally by DayPicker. */\n  components: CustomComponents;\n  /** The class names for the UI elements. */\n  classNames: ClassNames;\n  /** The styles for the UI elements. */\n  styles: Partial<Styles> | undefined;\n  /** The labels used in the user interface. */\n  labels: Labels;\n  /** The formatters used to format the UI elements. */\n  formatters: Formatters;\n};\n\n/**\n * Returns the context to work with `<DayPicker />` inside custom components.\n *\n * This hook provides access to the DayPicker context, which includes various\n * properties and methods to interact with the DayPicker component. It must be\n * used within a custom component.\n *\n * @template T - Use this type to refine the returned context type with a\n *   specific selection mode.\n * @returns {DayPickerContext<T>} The context to work with DayPicker.\n * @throws {Error} If the hook is used outside of a DayPicker provider.\n * @group Hooks\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function useDayPicker<\n  T extends { mode?: Mode | undefined; required?: boolean | undefined }\n>(): DayPickerContext<T> {\n  const context = useContext(dayPickerContext);\n  if (context === undefined) {\n    throw new Error(\"useDayPicker() must be used within a custom component.\");\n  }\n  return context;\n}\n", "import React, { MouseEventHandler } from \"react\";\n\nimport { UI } from \"../UI.js\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n\n/**\n * Render the toolbar with the navigation button.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Nav(\n  props: {\n    onPreviousClick?: MouseEventHandler<HTMLButtonElement>;\n    onNextClick?: MouseEventHandler<HTMLButtonElement>;\n    previousMonth?: Date | undefined;\n    nextMonth?: Date | undefined;\n  } & JSX.IntrinsicElements[\"nav\"]\n) {\n  const {\n    onPreviousClick,\n    onNextClick,\n    previousMonth,\n    nextMonth,\n    ...navProps\n  } = props;\n\n  const {\n    components,\n    classNames,\n    labels: { labelPrevious, labelNext }\n  } = useDayPicker();\n\n  return (\n    <nav {...navProps}>\n      <components.PreviousMonthButton\n        type=\"button\"\n        className={classNames[UI.PreviousMonthButton]}\n        tabIndex={previousMonth ? undefined : -1}\n        disabled={previousMonth ? undefined : true}\n        aria-label={labelPrevious(previousMonth)}\n        onClick={props.onPreviousClick}\n      >\n        <components.Chevron\n          disabled={previousMonth ? undefined : true}\n          className={classNames[UI.Chevron]}\n          orientation=\"left\"\n        />\n      </components.PreviousMonthButton>\n      <components.NextMonthButton\n        type=\"button\"\n        className={classNames[UI.NextMonthButton]}\n        tabIndex={nextMonth ? undefined : -1}\n        disabled={nextMonth ? undefined : true}\n        aria-label={labelNext(nextMonth)}\n        onClick={props.onNextClick}\n      >\n        <components.Chevron\n          disabled={nextMonth ? undefined : true}\n          orientation=\"right\"\n          className={classNames[UI.Chevron]}\n        />\n      </components.NextMonthButton>\n    </nav>\n  );\n}\n\nexport type NavProps = Parameters<typeof Nav>[0];\n", "import React from \"react\";\n\nimport { useDayPicker } from \"../useDayPicker.js\";\n\n/**\n * Render the next month button element in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function NextMonthButton(props: JSX.IntrinsicElements[\"button\"]) {\n  const { components } = useDayPicker();\n  return <components.Button {...props} />;\n}\n\nexport type NextMonthButtonProps = Parameters<typeof NextMonthButton>[0];\n", "import React from \"react\";\n\n/**\n * Render the `option` element.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Option(props: JSX.IntrinsicElements[\"option\"]) {\n  return <option {...props} />;\n}\n\nexport type OptionProps = Parameters<typeof Option>[0];\n", "import React from \"react\";\n\nimport { useDayPicker } from \"../useDayPicker.js\";\n\n/**\n * Render the previous month button element in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function PreviousMonthButton(props: JSX.IntrinsicElements[\"button\"]) {\n  const { components } = useDayPicker();\n  return <components.Button {...props} />;\n}\n\nexport type PreviousMonthButtonProps = Parameters<\n  typeof PreviousMonthButton\n>[0];\n", "import React from \"react\";\n\n/**\n * Render the root element.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Root(props: JSX.IntrinsicElements[\"div\"]) {\n  return <div {...props} />;\n}\n\nexport type RootProps = Parameters<typeof Root>[0];\n", "import React from \"react\";\n\n/**\n * Render the `select` element.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Select(props: JSX.IntrinsicElements[\"select\"]) {\n  return <select {...props} />;\n}\n\nexport type SelectProps = Parameters<typeof Select>[0];\n", "import React from \"react\";\n\nimport type { CalendarWeek } from \"../classes/index.js\";\n\n/**\n * Render a row in the calendar, with the days and the week number.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Week(\n  props: {\n    week: CalendarWeek;\n  } & JSX.IntrinsicElements[\"tr\"]\n) {\n  const { week, ...trProps } = props;\n  return <tr {...trProps} />;\n}\n\nexport type WeekProps = Parameters<typeof Week>[0];\n", "import React from \"react\";\n\n/**\n * Render the column header with the weekday name (e.g. \"Mo\", \"Tu\", etc.).\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Weekday(props: JSX.IntrinsicElements[\"th\"]) {\n  return <th {...props} />;\n}\n\nexport type WeekdayProps = Parameters<typeof Weekday>[0];\n", "import React from \"react\";\n\n/**\n * Render the row with the weekday names.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Weekdays(props: JSX.IntrinsicElements[\"tr\"]) {\n  return (\n    <thead>\n      <tr {...props} />\n    </thead>\n  );\n}\n\nexport type WeekdaysProps = Parameters<typeof Weekdays>[0];\n", "import React from \"react\";\n\nimport type { CalendarWeek } from \"../classes/index.js\";\n\n/**\n * Render the cell with the number of the week.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function WeekNumber(\n  props: {\n    /** The week to render. */\n    week: CalendarWeek;\n  } & JSX.IntrinsicElements[\"th\"]\n) {\n  const { week, ...thProps } = props;\n  return <th {...thProps} />;\n}\n\nexport type WeekNumberProps = Parameters<typeof WeekNumber>[0];\n", "import React from \"react\";\n\n/**\n * Render the column header for the week numbers.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function WeekNumberHeader(props: JSX.IntrinsicElements[\"th\"]) {\n  return <th {...props} />;\n}\n\nexport type WeekNumberHeaderProps = Parameters<typeof WeekNumberHeader>[0];\n", "import React from \"react\";\n\n/**\n * Render the weeks in the month grid.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Weeks(props: JSX.IntrinsicElements[\"tbody\"]) {\n  return <tbody {...props} />;\n}\n\nexport type WeeksProps = Parameters<typeof Weeks>[0];\n", "import React from \"react\";\n\nimport { useDayPicker } from \"../useDayPicker.js\";\n\nimport { DropdownProps } from \"./Dropdown.js\";\n\n/**\n * Render the dropdown to navigate between years.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function YearsDropdown(props: DropdownProps) {\n  const { components } = useDayPicker();\n  return <components.Dropdown {...props} />;\n}\n", "import * as components from \"../components/custom-components.js\";\nimport type { CustomComponents, DayPickerProps } from \"../types/index.js\";\n\nexport function getComponents(\n  customComponents: DayPickerProps[\"components\"]\n): CustomComponents {\n  return {\n    ...components,\n    ...customComponents\n  };\n}\n", "import type { DayPickerProps } from \"../types/index.js\";\n\n/** Return the `data-` attributes from the props. */\nexport function getDataAttributes(\n  props: DayPickerProps\n): Record<string, unknown> {\n  const dataAttributes: Record<string, unknown> = {\n    \"data-mode\": props.mode ?? undefined,\n    \"data-required\": \"required\" in props ? props.required : undefined,\n    \"data-multiple-months\":\n      (props.numberOfMonths && props.numberOfMonths > 1) || undefined,\n    \"data-week-numbers\": props.showWeekNumber || undefined\n  };\n  Object.entries(props).forEach(([key, val]) => {\n    if (key.startsWith(\"data-\")) {\n      dataAttributes[key] = val;\n    }\n  });\n  return dataAttributes;\n}\n", "/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n", "import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n", "import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addMonths} function options.\n */\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n * @param options - The options object\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(options?.in || date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n", "import { addDays } from \"./addDays.js\";\n\n/**\n * The {@link addWeeks} function options.\n */\n\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of weeks to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of weeks to be added.\n * @param options - An object with options\n *\n * @returns The new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport function addWeeks(date, amount, options) {\n  return addDays(date, amount * 7, options);\n}\n\n// Fallback for modularized imports:\nexport default addWeeks;\n", "import { addMonths } from \"./addMonths.js\";\n\n/**\n * The {@link addYears} function options.\n */\n\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The date to be changed\n * @param amount - The amount of years to be added.\n * @param options - The options\n *\n * @returns The new date with the years added\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nexport function addYears(date, amount, options) {\n  return addMonths(date, amount * 12, options);\n}\n\n// Fallback for modularized imports:\nexport default addYears;\n", "import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n", "import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n", "import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n", "import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n", "let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n", "import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n", "import { endOfWeek } from \"./endOfWeek.js\";\n\n/**\n * The {@link endOfISOWeek} function options.\n */\n\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of an ISO week\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * const result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfISOWeek(date, options) {\n  return endOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default endOfISOWeek;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfYear} function options.\n */\n\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The end of a year\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nexport function endOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  _date.setFullYear(year + 1, 0, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfYear;\n", "const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n", "export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n", "const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n", "/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n", "export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n", "export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n", "import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n", "import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n", "import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n", "import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n", "import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n", "import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n", "import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n", "export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n", "import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n", "import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n", "const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n", "const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n", "/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n", "import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n", "import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param date - The date that should be after the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nexport function isAfter(date, dateToCompare) {\n  return +toDate(date) > +toDate(dateToCompare);\n}\n\n// Fallback for modularized imports:\nexport default isAfter;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param date - The date that should be before the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is before the second date\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * const result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nexport function isBefore(date, dateToCompare) {\n  return +toDate(date) < +toDate(dateToCompare);\n}\n\n// Fallback for modularized imports:\nexport default isBefore;\n", "import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link isSameDay} function options.\n */\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(laterDate, earlierDate, options) {\n  const [dateLeft_, dateRight_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return +startOfDay(dateLeft_) === +startOfDay(dateRight_);\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n", "import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link isSameMonth} function options.\n */\n\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month (and year)?\n *\n * @description\n * Are the given dates in the same month (and year)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same month (and year)\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n *\n * @example\n * // Are 2 September 2014 and 25 September 2015 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\n * //=> false\n */\nexport function isSameMonth(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return (\n    laterDate_.getFullYear() === earlierDate_.getFullYear() &&\n    laterDate_.getMonth() === earlierDate_.getMonth()\n  );\n}\n\n// Fallback for modularized imports:\nexport default isSameMonth;\n", "import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link isSameYear} function options.\n */\n\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same year\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\nexport function isSameYear(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return laterDate_.getFullYear() === earlierDate_.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default isSameYear;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link max} function options.\n */\n\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dates - The dates to compare\n *\n * @returns The latest of the dates\n *\n * @example\n * // Which of these dates is the latest?\n * const result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\nexport function max(dates, options) {\n  let result;\n  let context = options?.in;\n\n  dates.forEach((date) => {\n    // Use the first date object as the context function\n    if (!context && typeof date === \"object\")\n      context = constructFrom.bind(null, date);\n\n    const date_ = toDate(date, context);\n    if (!result || result < date_ || isNaN(+date_)) result = date_;\n  });\n\n  return constructFrom(context, result || NaN);\n}\n\n// Fallback for modularized imports:\nexport default max;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link min} function options.\n */\n\n/**\n * @name min\n * @category Common Helpers\n * @summary Returns the earliest of the given dates.\n *\n * @description\n * Returns the earliest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dates - The dates to compare\n *\n * @returns The earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * const result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\nexport function min(dates, options) {\n  let result;\n  let context = options?.in;\n\n  dates.forEach((date) => {\n    // Use the first date object as the context function\n    if (!context && typeof date === \"object\")\n      context = constructFrom.bind(null, date);\n\n    const date_ = toDate(date, context);\n    if (!result || result > date_ || isNaN(+date_)) result = date_;\n  });\n\n  return constructFrom(context, result || NaN);\n}\n\n// Fallback for modularized imports:\nexport default min;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDaysInMonth} function options.\n */\n\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date, considering the context if provided.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nexport function getDaysInMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  const monthIndex = _date.getMonth();\n  const lastDayOfMonth = constructFrom(_date, 0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}\n\n// Fallback for modularized imports:\nexport default getDaysInMonth;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { getDaysInMonth } from \"./getDaysInMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setMonth} function options.\n */\n\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param month - The month index to set (0-11)\n * @param options - The options\n *\n * @returns The new date with the month set\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nexport function setMonth(date, month, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  const day = _date.getDate();\n\n  const midMonth = constructFrom(options?.in || date, 0);\n  midMonth.setFullYear(year, month, 15);\n  midMonth.setHours(0, 0, 0, 0);\n  const daysInMonth = getDaysInMonth(midMonth);\n\n  // Set the earlier date, allows to wrap Jan 31 to Feb 28\n  _date.setMonth(month, Math.min(day, daysInMonth));\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setMonth;\n", "import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setYear} function options.\n */\n\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param year - The year of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the year set\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * const result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\nexport function setYear(date, year, options) {\n  const date_ = toDate(date, options?.in);\n\n  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n  if (isNaN(+date_)) return constructFrom(options?.in || date, NaN);\n\n  date_.setFullYear(year);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default setYear;\n", "import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfMonth} function options.\n */\n\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date. The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments.\n * Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed,\n * or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setDate(1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMonth;\n", "import type {\n  FormatOptions as DateFnsFormatOptions,\n  Locale as DateFnsLocale\n} from \"date-fns\";\nimport { addDays } from \"date-fns/addDays\";\nimport { addMonths } from \"date-fns/addMonths\";\nimport { addWeeks } from \"date-fns/addWeeks\";\nimport { addYears } from \"date-fns/addYears\";\nimport { differenceInCalendarDays } from \"date-fns/differenceInCalendarDays\";\nimport { differenceInCalendarMonths } from \"date-fns/differenceInCalendarMonths\";\nimport { endOfISOWeek } from \"date-fns/endOfISOWeek\";\nimport { endOfMonth } from \"date-fns/endOfMonth\";\nimport { endOfWeek } from \"date-fns/endOfWeek\";\nimport { endOfYear } from \"date-fns/endOfYear\";\nimport { format } from \"date-fns/format\";\nimport { getISOWeek } from \"date-fns/getISOWeek\";\nimport { getWeek } from \"date-fns/getWeek\";\nimport { isAfter } from \"date-fns/isAfter\";\nimport { isBefore } from \"date-fns/isBefore\";\nimport { isDate } from \"date-fns/isDate\";\nimport { isSameDay } from \"date-fns/isSameDay\";\nimport { isSameMonth } from \"date-fns/isSameMonth\";\nimport { isSameYear } from \"date-fns/isSameYear\";\nimport { max } from \"date-fns/max\";\nimport { min } from \"date-fns/min\";\nimport { setMonth } from \"date-fns/setMonth\";\nimport { setYear } from \"date-fns/setYear\";\nimport { startOfDay } from \"date-fns/startOfDay\";\nimport { startOfISOWeek } from \"date-fns/startOfISOWeek\";\nimport { startOfMonth } from \"date-fns/startOfMonth\";\nimport { startOfWeek } from \"date-fns/startOfWeek\";\nimport { startOfYear } from \"date-fns/startOfYear\";\n\n/** The options for the {@link Formatters}. */\nexport type FormatOptions = DateFnsFormatOptions;\n\n/** The options for the {@link Labels}. */\nexport type LabelOptions = DateFnsFormatOptions;\n\n/** The locale used within DayPicker. */\nexport type Locale = DateFnsLocale;\n\nexport type { Month as DateFnsMonth } from \"date-fns\";\n\n/**\n * The date library used by DayPicker. It's a subset of the date-fns functions\n * plus an optional Date constructor.\n *\n * Override the default date library with the `dateLib` prop.\n */\nexport type DateLib = {\n  /** The constructor of the date object. */\n  Date?: DateConstructor | undefined;\n\n  /** Adds the specified number of days to the given date. */\n  addDays: typeof addDays;\n\n  /** Adds the specified number of months to the given date. */\n  addMonths: typeof addMonths;\n\n  /** Adds the specified number of weeks to the given date. */\n  addWeeks: typeof addWeeks;\n\n  /** Adds the specified number of years to the given date. */\n  addYears: typeof addYears;\n\n  /** Returns the number of calendar days between the given dates. */\n  differenceInCalendarDays: typeof differenceInCalendarDays;\n\n  /** Returns the number of calendar months between the given dates. */\n  differenceInCalendarMonths: typeof differenceInCalendarMonths;\n\n  /** Returns the end of an ISO week for the given date. */\n  endOfISOWeek: typeof endOfISOWeek;\n\n  /** Returns the end of the month for the given date. */\n  endOfMonth: typeof endOfMonth;\n\n  /** Returns the end of the week for the given date. */\n  endOfWeek: typeof endOfWeek;\n\n  /** Returns the end of the year for the given date. */\n  endOfYear: typeof endOfYear;\n\n  /** Formats the given date using the specified format string. */\n  format: typeof format;\n\n  /** Returns the ISO week number for the given date. */\n  getISOWeek: typeof getISOWeek;\n\n  /** Returns the week number for the given date. */\n  getWeek: typeof getWeek;\n\n  /** Checks if the first date is after the second date. */\n  isAfter: typeof isAfter;\n\n  /** Checks if the first date is before the second date. */\n  isBefore: typeof isBefore;\n\n  /** Checks if the given value is a date. */\n  isDate: typeof isDate;\n\n  /** Checks if the given dates are the same day. */\n  isSameDay: typeof isSameDay;\n\n  /** Checks if the given dates are in the same month. */\n  isSameMonth: typeof isSameMonth;\n\n  /** Checks if the given dates are in the same year. */\n  isSameYear: typeof isSameYear;\n\n  /** Returns the maximum of the given dates. */\n  max: typeof max;\n\n  /** Returns the minimum of the given dates. */\n  min: typeof min;\n\n  /** Sets the month for the given date. */\n  setMonth: typeof setMonth;\n\n  /** Sets the year for the given date. */\n  setYear: typeof setYear;\n\n  /** Returns the start of the day for the given date. */\n  startOfDay: typeof startOfDay;\n\n  /** Returns the start of an ISO week for the given date. */\n  startOfISOWeek: typeof startOfISOWeek;\n\n  /** Returns the start of the month for the given date. */\n  startOfMonth: typeof startOfMonth;\n\n  /** Returns the start of the week for the given date. */\n  startOfWeek: typeof startOfWeek;\n\n  /** Returns the start of the year for the given date. */\n  startOfYear: typeof startOfYear;\n};\n\n/**\n * The default date library to use with the date picker.\n *\n * @private\n * @internal\n */\nexport const dateLib = {\n  addDays,\n  addMonths,\n  addWeeks,\n  addYears,\n  differenceInCalendarDays,\n  differenceInCalendarMonths,\n  endOfISOWeek,\n  endOfMonth,\n  endOfWeek,\n  endOfYear,\n  format,\n  getISOWeek,\n  getWeek,\n  isAfter,\n  isBefore,\n  isDate,\n  isSameDay,\n  isSameMonth,\n  isSameYear,\n  max,\n  min,\n  setMonth,\n  setYear,\n  startOfDay,\n  startOfISOWeek,\n  startOfMonth,\n  startOfWeek,\n  startOfYear\n};\n", "import { dateLib, type DateLib } from \"../lib/dateLib.js\";\nimport type { DayPickerProps } from \"../types/index.js\";\n\nexport function getDateLib(customLib: DayPickerProps[\"dateLib\"]): DateLib {\n  return {\n    ...dateLib,\n    ...customLib\n  };\n}\n", "import { UI, DayFlag, SelectionState } from \"../UI.js\";\nimport type { ClassNames } from \"../types/index.js\";\n\n/**\n * Get the default class names for the UI elements.\n *\n * @group Utilities\n */\nexport function getDefaultClassNames(): ClassNames {\n  const classNames: Partial<Required<ClassNames>> = {};\n\n  for (const key in UI) {\n    classNames[UI[key as keyof typeof UI]] =\n      `rdp-${UI[key as keyof typeof UI]}`;\n  }\n\n  for (const key in DayFlag) {\n    classNames[DayFlag[key as keyof typeof DayFlag]] =\n      `rdp-${DayFlag[key as keyof typeof DayFlag]}`;\n  }\n\n  for (const key in SelectionState) {\n    classNames[SelectionState[key as keyof typeof SelectionState]] =\n      `rdp-${SelectionState[key as keyof typeof SelectionState]}`;\n  }\n\n  return classNames as Required<ClassNames>;\n}\n", "export * from \"./formatCaption.js\";\nexport * from \"./formatDay.js\";\nexport * from \"./formatMonthDropdown.js\";\nexport * from \"./formatWeekNumber.js\";\nexport * from \"./formatWeekNumberHeader.js\";\nexport * from \"./formatWeekdayName.js\";\nexport * from \"./formatYearDropdown.js\";\n", "/**\n * The symbol to access the `TZDate`'s function to construct a new instance from\n * the provided value. It helps date-fns to inherit the time zone.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");", "const offsetFormatCache = {};\nconst offsetCache = {};\n\n/**\n * The function extracts UTC offset in minutes from the given date in specified\n * time zone.\n *\n * Unlike `Date.prototype.getTimezoneOffset`, this function returns the value\n * mirrored to the sign of the offset in the time zone. For Asia/Singapore\n * (UTC+8), `tzOffset` returns 480, while `getTimezoneOffset` returns -480.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date to check the offset for\n *\n * @returns UTC offset in minutes\n */\nexport function tzOffset(timeZone, date) {\n  try {\n    const format = offsetFormatCache[timeZone] ||= new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone,\n      hour: \"numeric\",\n      timeZoneName: \"longOffset\"\n    }).format;\n    const offsetStr = format(date).slice(6);\n    if (offsetStr in offsetCache) return offsetCache[offsetStr];\n    return calcOffset(offsetStr, offsetStr.split(\":\"));\n  } catch {\n    // Fallback to manual parsing if the runtime doesn't support ±HH:MM/±HHMM/±HH\n    // See: https://github.com/nodejs/node/issues/53419\n    if (timeZone in offsetCache) return offsetCache[timeZone];\n    const captures = timeZone?.match(offsetRe);\n    if (captures) return calcOffset(timeZone, captures.slice(1));\n    return NaN;\n  }\n}\nconst offsetRe = /([+-]\\d\\d):?(\\d\\d)?/;\nfunction calcOffset(cacheStr, values) {\n  const hours = +values[0];\n  const minutes = +(values[1] || 0);\n  return offsetCache[cacheStr] = hours > 0 ? hours * 60 + minutes : hours * 60 - minutes;\n}", "import { tzOffset } from \"../tzOffset/index.js\";\nexport class TZDateMini extends Date {\n  //#region static\n\n  constructor(...args) {\n    super();\n    if (args.length > 1 && typeof args[args.length - 1] === \"string\") {\n      this.timeZone = args.pop();\n    }\n    this.internal = new Date();\n    if (isNaN(tzOffset(this.timeZone, this))) {\n      this.setTime(NaN);\n    } else {\n      if (!args.length) {\n        this.setTime(Date.now());\n      } else if (typeof args[0] === \"number\" && (args.length === 1 || args.length === 2 && typeof args[1] !== \"number\")) {\n        this.setTime(args[0]);\n      } else if (typeof args[0] === \"string\") {\n        this.setTime(+new Date(args[0]));\n      } else if (args[0] instanceof Date) {\n        this.setTime(+args[0]);\n      } else {\n        this.setTime(+new Date(...args));\n        adjustToSystemTZ(this, NaN);\n      }\n    }\n    syncToInternal(this);\n  }\n  static tz(tz, ...args) {\n    return args.length ? new TZDateMini(...args, tz) : new TZDateMini(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region time zone\n\n  withTimeZone(timeZone) {\n    return new TZDateMini(+this, timeZone);\n  }\n  getTimezoneOffset() {\n    return -tzOffset(this.timeZone, this);\n  }\n\n  //#endregion\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDateMini(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}\n\n// Assign getters and setters\nconst re = /^(get|set)(?!UTC)/;\nObject.getOwnPropertyNames(Date.prototype).forEach(method => {\n  if (!re.test(method)) return;\n  const utcMethod = method.replace(re, \"$1UTC\");\n  // Filter out methods without UTC counterparts\n  if (!TZDateMini.prototype[utcMethod]) return;\n  if (method.startsWith(\"get\")) {\n    // Delegate to internal date's UTC method\n    TZDateMini.prototype[method] = function () {\n      return this.internal[utcMethod]();\n    };\n  } else {\n    // Assign regular setter\n    TZDateMini.prototype[method] = function () {\n      Date.prototype[utcMethod].apply(this.internal, arguments);\n      syncFromInternal(this);\n      return +this;\n    };\n\n    // Assign UTC setter\n    TZDateMini.prototype[utcMethod] = function () {\n      Date.prototype[utcMethod].apply(this, arguments);\n      syncToInternal(this);\n      return +this;\n    };\n  }\n});\n\n/**\n * Function syncs time to internal date, applying the time zone offset.\n *\n * @param {Date} date - Date to sync\n */\nfunction syncToInternal(date) {\n  date.internal.setTime(+date);\n  date.internal.setUTCMinutes(date.internal.getUTCMinutes() - date.getTimezoneOffset());\n}\n\n/**\n * Function syncs the internal date UTC values to the date. It allows to get\n * accurate timestamp value.\n *\n * @param {Date} date - The date to sync\n */\nfunction syncFromInternal(date) {\n  // First we transpose the internal values\n  Date.prototype.setFullYear.call(date, date.internal.getUTCFullYear(), date.internal.getUTCMonth(), date.internal.getUTCDate());\n  Date.prototype.setHours.call(date, date.internal.getUTCHours(), date.internal.getUTCMinutes(), date.internal.getUTCSeconds(), date.internal.getUTCMilliseconds());\n\n  // Now we have to adjust the date to the system time zone\n  adjustToSystemTZ(date);\n}\n\n/**\n * Function adjusts the date to the system time zone. It uses the time zone\n * differences to calculate the offset and adjust the date.\n *\n * @param {Date} date - Date to adjust\n */\nfunction adjustToSystemTZ(date) {\n  // Save the time zone offset before all the adjustments\n  const offset = tzOffset(date.timeZone, date);\n\n  //#region System DST adjustment\n\n  // The biggest problem with using the system time zone is that when we create\n  // a date from internal values stored in UTC, the system time zone might end\n  // up on the DST hour:\n  //\n  //   $ TZ=America/New_York node\n  //   > new Date(2020, 2, 8, 1).toString()\n  //   'Sun Mar 08 2020 01:00:00 GMT-0500 (Eastern Standard Time)'\n  //   > new Date(2020, 2, 8, 2).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 3).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 4).toString()\n  //   'Sun Mar 08 2020 04:00:00 GMT-0400 (Eastern Daylight Time)'\n  //\n  // Here we get the same hour for both 2 and 3, because the system time zone\n  // has DST beginning at 8 March 2020, 2 a.m. and jumps to 3 a.m. So we have\n  // to adjust the internal date to reflect that.\n  //\n  // However we want to adjust only if that's the DST hour the change happenes,\n  // not the hour where DST moves to.\n\n  // We calculate the previous hour to see if the time zone offset has changed\n  // and we have landed on the DST hour.\n  const prevHour = new Date(+date);\n  // We use UTC methods here as we don't want to land on the same hour again\n  // in case of DST.\n  prevHour.setUTCHours(prevHour.getUTCHours() - 1);\n\n  // Calculate if we are on the system DST hour.\n  const systemOffset = -new Date(+date).getTimezoneOffset();\n  const prevHourSystemOffset = -new Date(+prevHour).getTimezoneOffset();\n  const systemDSTChange = systemOffset - prevHourSystemOffset;\n  // Detect the DST shift. System DST change will occur both on\n  const dstShift = Date.prototype.getHours.apply(date) !== date.internal.getUTCHours();\n\n  // Move the internal date when we are on the system DST hour.\n  if (systemDSTChange && dstShift) date.internal.setUTCMinutes(date.internal.getUTCMinutes() + systemDSTChange);\n\n  //#endregion\n\n  //#region System diff adjustment\n\n  // Now we need to adjust the date, since we just applied internal values.\n  // We need to calculate the difference between the system and date time zones\n  // and apply it to the date.\n\n  const offsetDiff = systemOffset - offset;\n  if (offsetDiff) Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetDiff);\n\n  //#endregion\n\n  //#region Post-adjustment DST fix\n\n  const postOffset = tzOffset(date.timeZone, date);\n  const postSystemOffset = -new Date(+date).getTimezoneOffset();\n  const postOffsetDiff = postSystemOffset - postOffset;\n  const offsetChanged = postOffset !== offset;\n  const postDiff = postOffsetDiff - offsetDiff;\n  if (offsetChanged && postDiff) {\n    Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + postDiff);\n\n    // Now we need to check if got offset change during the post-adjustment.\n    // If so, we also need both dates to reflect that.\n\n    const newOffset = tzOffset(date.timeZone, date);\n    const offsetChange = postOffset - newOffset;\n    if (offsetChange) {\n      date.internal.setUTCMinutes(date.internal.getUTCMinutes() + offsetChange);\n      Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetChange);\n    }\n  }\n\n  //#endregion\n}", "import { TZDateMini } from \"./mini.js\";\n\n/**\n * UTC date class. It maps getters and setters to corresponding UTC methods,\n * forcing all calculations in the UTC time zone.\n *\n * Combined with date-fns, it allows using the class the same way as\n * the original date class.\n *\n * This complete version provides not only getters, setters,\n * and `getTimezoneOffset`, but also the formatter functions, mirroring\n * all original `Date` functionality. Use this version when you need to format\n * a string or in an environment you don't fully control (a library).\n * For a minimal version, see `UTCDateMini`.\n */\nexport class TZDate extends TZDateMini {\n  //#region static\n\n  static tz(tz, ...args) {\n    return args.length ? new TZDate(...args, tz) : new TZDate(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region representation\n\n  toISOString() {\n    const [sign, hours, minutes] = this.tzComponents();\n    const tz = `${sign}${hours}:${minutes}`;\n    return this.internal.toISOString().slice(0, -1) + tz;\n  }\n  toString() {\n    // \"Tue Aug 13 2024 07:50:19 GMT+0800 (Singapore Standard Time)\";\n    return `${this.toDateString()} ${this.toTimeString()}`;\n  }\n  toDateString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const [day, date, month, year] = this.internal.toUTCString().split(\" \");\n    // \"Tue Aug 13 2024\"\n    return `${day?.slice(0, -1) /* Remove \",\" */} ${month} ${date} ${year}`;\n  }\n  toTimeString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const time = this.internal.toUTCString().split(\" \")[4];\n    const [sign, hours, minutes] = this.tzComponents();\n    // \"07:42:23 GMT+0800 (Singapore Standard Time)\"\n    return `${time} GMT${sign}${hours}${minutes} (${tzName(this.timeZone, this)})`;\n  }\n  toLocaleString(locales, options) {\n    return Date.prototype.toLocaleString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleDateString(locales, options) {\n    return Date.prototype.toLocaleDateString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleTimeString(locales, options) {\n    return Date.prototype.toLocaleTimeString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n\n  //#endregion\n\n  //#region private\n\n  tzComponents() {\n    const offset = this.getTimezoneOffset();\n    const sign = offset > 0 ? \"-\" : \"+\";\n    const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, \"0\");\n    const minutes = String(Math.abs(offset) % 60).padStart(2, \"0\");\n    return [sign, hours, minutes];\n  }\n\n  //#endregion\n\n  withTimeZone(timeZone) {\n    return new TZDate(+this, timeZone);\n  }\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDate(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}\nfunction tzName(tz, date) {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    timeZone: tz,\n    timeZoneName: \"long\"\n  }).format(date).slice(12);\n}", "import {\n  FormatOptions,\n  dateLib as defaultDateLib,\n  type DateLib\n} from \"../lib/index.js\";\n\n/**\n * Format the caption of the month.\n *\n * @defaultValue `LLLL y` (e.g. \"November 2022\")\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatCaption(\n  month: Date,\n  options?: FormatOptions,\n  /** @ignore */\n  dateLib: DateLib = defaultDateLib\n) {\n  return dateLib.format(month, \"LLLL y\", options);\n}\n\n/**\n * @private\n * @deprecated Use {@link formatCaption} instead.\n * @group Formatters\n */\nexport const formatMonthCaption = formatCaption;\n", "import type { FormatOptions, DateLib } from \"../lib/dateLib.js\";\nimport { dateLib as defaultDateLib } from \"../lib/index.js\";\n\n/**\n * Format the day date shown in the day cell.\n *\n * @defaultValue `d` (e.g. \"1\")\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatDay(\n  date: Date,\n  options?: FormatOptions,\n  /** @ignore */\n  dateLib: DateLib = defaultDateLib\n) {\n  return dateLib.format(date, \"d\", options);\n}\n", "import type { DateFnsMonth } from \"../lib/dateLib.js\";\nimport { enUS } from \"../lib/locales.js\";\n\n/**\n * Format the month number for the dropdown option label.\n *\n * @defaultValue The localized month name\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatMonthDropdown(\n  /** The month number to format. */\n  monthNumber: number,\n  /** The locale to use for formatting. */\n  locale = enUS\n): string {\n  return locale.localize?.month(monthNumber as DateFnsMonth);\n}\n", "/**\n * Format the week number.\n *\n * @defaultValue `weekNumber.toLocaleString()` with a leading zero for single-digit numbers\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatWeekNumber(weekNumber: number) {\n  if (weekNumber < 10) {\n    return `0${weekNumber.toLocaleString()}`;\n  }\n  return `${weekNumber.toLocaleString()}`;\n}\n", "/**\n * Format the week number header.\n *\n * @defaultValue `\"\"`\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatWeekNumberHeader() {\n  return ``;\n}\n", "import type { FormatOptions, DateLib } from \"../lib/dateLib.js\";\nimport { dateLib as defaultDateLib } from \"../lib/index.js\";\n\n/**\n * Format the weekday name to be displayed in the weekdays header.\n *\n * @defaultValue `cccccc` (e.g. \"Mo\" for Monday)\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatWeekdayName(\n  weekday: Date,\n  options?: FormatOptions,\n  /** @ignore */\n  dateLib: DateLib = defaultDateLib\n) {\n  return dateLib.format(weekday, \"cccccc\", options);\n}\n", "/**\n * Format the years for the dropdown option label.\n *\n * @defaultValue `year.toString()`\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatYearDropdown(year: number): string {\n  return year.toString();\n}\n\n/**\n * @private\n * @deprecated Use `formatYearDropdown` instead.\n * @group Formatters\n */\nexport const formatYearCaption = formatYearDropdown;\n", "import * as defaultFormatters from \"../formatters/index.js\";\nimport type { DayPickerProps } from \"../types/index.js\";\n\n/** Return the formatters from the props merged with the default formatters. */\nexport function getFormatters(customFormatters: DayPickerProps[\"formatters\"]) {\n  if (customFormatters?.formatMonthCaption && !customFormatters.formatCaption) {\n    customFormatters.formatCaption = customFormatters.formatMonthCaption;\n  }\n  if (\n    customFormatters?.formatYearCaption &&\n    !customFormatters.formatYearDropdown\n  ) {\n    customFormatters.formatYearDropdown = customFormatters.formatYearCaption;\n  }\n  return {\n    ...defaultFormatters,\n    ...customFormatters\n  };\n}\n", "import { DropdownOption } from \"../components/Dropdown.js\";\nimport type { Locale, DateLib } from \"../lib/dateLib.js\";\nimport type { Formatters } from \"../types/index.js\";\n\n/** Return the months to show in the dropdown. */\nexport function getMonthOptions(\n  displayMonth: Date,\n  navStart: Date | undefined,\n  navEnd: Date | undefined,\n  formatters: Pick<Formatters, \"formatMonthDropdown\">,\n  locale: Locale | undefined,\n  dateLib: DateLib\n): DropdownOption[] | undefined {\n  if (!navStart) return undefined;\n  if (!navEnd) return undefined;\n\n  const { addMonths, startOfMonth, isBefore } = dateLib;\n  const year = displayMonth.getFullYear();\n\n  const months: number[] = [];\n  let month = navStart;\n  while (months.length < 12 && isBefore(month, addMonths(navEnd, 1))) {\n    months.push(month.getMonth());\n    month = addMonths(month, 1);\n  }\n  const sortedMonths = months.sort((a, b) => {\n    return a - b;\n  });\n  const options = sortedMonths.map((value) => {\n    const label = formatters.formatMonthDropdown(value, locale);\n    const month = dateLib.Date\n      ? new dateLib.Date(year, value)\n      : new Date(year, value);\n    const disabled =\n      (navStart && month < startOfMonth(navStart)) ||\n      (navEnd && month > startOfMonth(navEnd)) ||\n      false;\n    return { value, label, disabled };\n  });\n\n  return options;\n}\n", "import type { CSSProperties } from \"react\";\n\nimport { UI } from \"../UI.js\";\nimport type { Modifiers, ModifiersStyles, Styles } from \"../types/index.js\";\n\nexport function getStyleForModifiers(\n  dayModifiers: Modifiers,\n  styles: Partial<Styles> = {},\n  modifiersStyles: Partial<ModifiersStyles> = {}\n) {\n  let style: CSSProperties = { ...styles?.[UI.Day] };\n  Object.entries(dayModifiers)\n    .filter(([, active]) => active === true)\n    .forEach(([modifier]) => {\n      style = {\n        ...style,\n        ...modifiersStyles?.[modifier]\n      };\n    });\n  return style;\n}\n", "import { TZDate } from \"@date-fns/tz\";\n\nimport type { Locale, DateLib } from \"../lib/dateLib.js\";\nimport { dateLib as defaultDateLib } from \"../lib/index.js\";\n\n/**\n * Generate a series of 7 days, starting from the week, to use for formatting\n * the weekday names (Monday, Tuesday, etc.).\n */\nexport function getWeekdays(\n  locale?: Locale | undefined,\n  /** The index of the first day of the week (0 - Sunday). */\n  weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | undefined,\n  /** Use ISOWeek instead of locale/ */\n  ISOWeek?: boolean | undefined,\n  timeZone?: string | undefined,\n  /** @ignore */\n  dateLib: DateLib = defaultDateLib\n): Date[] {\n  const date = timeZone\n    ? TZDate.tz(timeZone)\n    : dateLib.Date\n      ? new dateLib.Date()\n      : new Date();\n  const start = ISOWeek\n    ? dateLib.startOfISOWeek(date)\n    : dateLib.startOfWeek(date, { locale, weekStartsOn });\n\n  const days = [];\n  for (let i = 0; i < 7; i++) {\n    const day = dateLib.addDays(start, i);\n    days.push(day);\n  }\n  return days;\n}\n", "import { DropdownOption } from \"../components/Dropdown.js\";\nimport type { DateLib } from \"../lib/dateLib.js\";\nimport type { Formatters } from \"../types/index.js\";\n\n/** Return the years to show in the dropdown. */\nexport function getYearOptions(\n  displayMonth: Date,\n  calendarStart: Date | undefined,\n  calendarEnd: Date | undefined,\n  formatters: Pick<Formatters, \"formatYearDropdown\">,\n  dateLib: DateLib\n): DropdownOption[] | undefined {\n  if (!calendarStart) return undefined;\n  if (!calendarEnd) return undefined;\n  const {\n    startOfMonth,\n    startOfYear,\n    endOfYear,\n    addYears,\n    isBefore,\n    isSameYear\n  } = dateLib;\n  const month = displayMonth.getMonth();\n  const firstNavYear = startOfYear(calendarStart);\n  const lastNavYear = endOfYear(calendarEnd);\n  const years: number[] = [];\n\n  let year = firstNavYear;\n  while (isBefore(year, lastNavYear) || isSameYear(year, lastNavYear)) {\n    years.push(year.getFullYear());\n    year = addYears(year, 1);\n  }\n\n  return years.map((value) => {\n    const year = dateLib.Date\n      ? new dateLib.Date(value, month)\n      : new Date(value, month);\n    const disabled =\n      (calendarStart && year < startOfMonth(calendarStart)) ||\n      (month && calendarEnd && year > startOfMonth(calendarEnd)) ||\n      false;\n    const label = formatters.formatYearDropdown(value);\n    return {\n      value,\n      label,\n      disabled\n    };\n  });\n}\n", "export * from \"./labelGrid.js\";\nexport * from \"./labelGridcell.js\";\nexport * from \"./labelDayButton.js\";\nexport * from \"./labelNav.js\";\nexport * from \"./labelGrid.js\";\nexport * from \"./labelMonthDropdown.js\";\nexport * from \"./labelNext.js\";\nexport * from \"./labelPrevious.js\";\nexport * from \"./labelWeekday.js\";\nexport * from \"./labelWeekNumber.js\";\nexport * from \"./labelWeekNumberHeader.js\";\nexport * from \"./labelYearDropdown.js\";\n", "import type { LabelOptions, DateLib } from \"../lib/dateLib.js\";\nimport { dateLib as defaultDateLib } from \"../lib/index.js\";\n\n/**\n * Return an ARIA label for the month grid, that will be announced when entering\n * the grid.\n *\n * @defaultValue `LLLL y` (e.g. \"November 2022\")\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelGrid(\n  date: Date,\n  options?: LabelOptions,\n  /** @ignore */\n  dateLib: DateLib = defaultDateLib\n) {\n  return dateLib.format(date, \"LLLL y\", options);\n}\n\n/**\n * @deprecated Use {@link labelGrid} instead.\n * @protected\n */\nexport const labelCaption = labelGrid;\n", "import type { DateLib } from \"../index.js\";\nimport type { LabelOptions } from \"../lib/dateLib.js\";\nimport { dateLib as defaultDateLib } from \"../lib/index.js\";\nimport type { Modifiers } from \"../types/index.js\";\n\n/**\n * The label for the day gridcell when the calendar is not interactive.\n *\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelGridcell(\n  date: Date,\n  /** The modifiers for the day. */\n  modifiers?: Modifiers,\n  options?: LabelOptions,\n  /** @ignore */\n  dateLib: DateLib = defaultDateLib\n) {\n  let label = dateLib.format(date, \"PPPP\", options);\n  if (modifiers?.today) {\n    label = `Today, ${label}`;\n  }\n  return label;\n}\n", "import type { DateLib, LabelOptions } from \"../index.js\";\nimport { dateLib as defaultDateLib } from \"../lib/index.js\";\nimport type { Modifiers } from \"../types/index.js\";\n\n/**\n * The ARIA label for the day button.\n *\n * Use the `modifiers` argument to add additional context to the label, e.g.\n * when a day is selected or is today.\n *\n * @defaultValue The formatted date.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelDayButton(\n  date: Date,\n  /** The modifiers for the day. */\n  modifiers: Modifiers,\n  options?: LabelOptions,\n  /** @ignore */\n  dateLib: DateLib = defaultDateLib\n) {\n  let label = dateLib.format(date, \"PPPP\", options);\n  if (modifiers.today) label = `Today, ${label}`;\n  if (modifiers.selected) label = `${label}, selected`;\n  return label;\n}\n\n/** @deprecated Use `labelDayButton` instead. */\nexport const labelDay = labelDayButton;\n", "/**\n * The ARIA label for the navigation toolbar.\n *\n * @defaultValue `\"\"`\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelNav(): string {\n  return \"\";\n}\n", "import type { LabelOptions } from \"../lib/dateLib.js\";\n\n/**\n * The ARIA label for the months dropdown.\n *\n * @defaultValue `\"Choose the Month\"`\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelMonthDropdown(options?: LabelOptions) {\n  return \"Choose the Month\";\n}\n", "/**\n * The ARIA label for next month button.\n *\n * @defaultValue `\"Go to the Next Month\"`\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelNext(\n  /** `undefined` where there's no next month to navigate to. */\n  month: Date | undefined\n) {\n  return \"Go to the Next Month\";\n}\n", "/**\n * The ARIA label for previous month button.\n *\n * @defaultValue `\"Go to the Previous Month\"`\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelPrevious(\n  /** Undefined where there's no previous month to navigate to. */\n  month: Date | undefined\n) {\n  return \"Go to the Previous Month\";\n}\n", "import type { LabelOptions, DateLib } from \"../lib/dateLib.js\";\nimport { dateLib as defaultDateLib } from \"../lib/index.js\";\n\n/**\n * The ARIA label for the Weekday column header.\n *\n * @defaultValue `\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"`\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelWeekday(\n  date: Date,\n  options?: LabelOptions,\n  /** @ignore */\n  dateLib: DateLib = defaultDateLib\n): string {\n  return dateLib.format(date, \"cccc\", options);\n}\n", "import type { LabelOptions } from \"../lib/dateLib.js\";\n\n/**\n * The ARIA label for the week number cell (the first cell in the row).\n *\n * @defaultValue `Week ${weekNumber}`\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelWeekNumber(\n  weekNumber: number,\n  options?: LabelOptions\n): string {\n  return `Week ${weekNumber}`;\n}\n", "import type { LabelOptions } from \"../lib/dateLib.js\";\n\n/**\n * The ARIA label for the week number header element.\n *\n * @defaultValue `\"Week Number\"`\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelWeekNumberHeader(options?: LabelOptions): string {\n  return \"Week Number\";\n}\n", "import type { LabelOptions } from \"../lib/dateLib.js\";\n\n/**\n * The ARIA label for the years dropdown.\n *\n * @defaultValue `\"Choose the Year\"`\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelYearDropdown(options?: LabelOptions) {\n  return \"Choose the Year\";\n}\n", "import { useEffect } from \"react\";\n\nimport type {\n  CalendarWeek,\n  CalendarDay,\n  CalendarMonth\n} from \"./classes/index.js\";\nimport { getDates } from \"./helpers/getDates.js\";\nimport { getDays } from \"./helpers/getDays.js\";\nimport { getDisplayMonths } from \"./helpers/getDisplayMonths.js\";\nimport { getInitialMonth } from \"./helpers/getInitialMonth.js\";\nimport { getMonths } from \"./helpers/getMonths.js\";\nimport { getNavMonths } from \"./helpers/getNavMonth.js\";\nimport { getNextMonth } from \"./helpers/getNextMonth.js\";\nimport { getPreviousMonth } from \"./helpers/getPreviousMonth.js\";\nimport { getWeeks } from \"./helpers/getWeeks.js\";\nimport { useControlledValue } from \"./helpers/useControlledValue.js\";\nimport type { DateLib } from \"./lib/index.js\";\nimport type { DayPickerProps } from \"./types/props.js\";\n\n/**\n * Return the calendar object to work with the calendar in custom components.\n *\n * @see https://daypicker.dev/guides/custom-components\n */\nexport interface Calendar {\n  /**\n   * All the days displayed in the calendar. As opposite from\n   * {@link CalendarContext.dates}, it may return duplicated dates when shown\n   * outside the month.\n   */\n  days: CalendarDay[];\n  /** The months displayed in the calendar. */\n  weeks: CalendarWeek[];\n  /** The months displayed in the calendar. */\n  months: CalendarMonth[];\n\n  /** The next month to display. */\n  nextMonth: Date | undefined;\n  /** The previous month to display. */\n  previousMonth: Date | undefined;\n\n  /**\n   * The month where the navigation starts. `undefined` if the calendar can be\n   * navigated indefinitely to the past.\n   */\n  navStart: Date | undefined;\n  /**\n   * The month where the navigation ends. `undefined` if the calendar can be\n   * navigated indefinitely to the past.\n   */\n  navEnd: Date | undefined;\n\n  /** Navigate to the specified month. Will fire the `onMonthChange` callback. */\n  goToMonth: (month: Date) => void;\n  /**\n   * Navigate to the specified date. If the second parameter (refDate) is\n   * provided and the date is before the refDate, then the month is set to one\n   * month before the date.\n   *\n   * @param day - The date to navigate to.\n   * @param dateToCompare - Optional. If `date` is before `dateToCompare`, the\n   *   month is set to one month before the date.\n   */\n  goToDay: (day: CalendarDay) => void;\n}\n\n/** @private */\nexport function useCalendar(\n  props: Pick<\n    DayPickerProps,\n    | \"captionLayout\"\n    | \"endMonth\"\n    | \"startMonth\"\n    | \"today\"\n    | \"fixedWeeks\"\n    | \"ISOWeek\"\n    | \"weekStartsOn\"\n    | \"numberOfMonths\"\n    | \"disableNavigation\"\n    | \"onMonthChange\"\n    | \"month\"\n    | \"defaultMonth\"\n    | \"timeZone\"\n    // Deprecated:\n    | \"fromMonth\"\n    | \"fromYear\"\n    | \"toMonth\"\n    | \"toYear\"\n  >,\n  dateLib: DateLib\n): Calendar {\n  const [navStart, navEnd] = getNavMonths(props, dateLib);\n\n  const { startOfMonth, endOfMonth } = dateLib;\n  const initialMonth = getInitialMonth(props, dateLib);\n  const [firstMonth, setFirstMonth] = useControlledValue(\n    initialMonth,\n    props.month ? startOfMonth(props.month) : undefined\n  );\n\n  useEffect(() => {\n    const newInitialMonth = getInitialMonth(props, dateLib);\n    setFirstMonth(newInitialMonth);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.timeZone]);\n\n  /** The months displayed in the calendar. */\n  const displayMonths = getDisplayMonths(firstMonth, navEnd, props, dateLib);\n\n  /** The dates displayed in the calendar. */\n  const dates = getDates(\n    displayMonths,\n    props.endMonth ? endOfMonth(props.endMonth) : undefined,\n    props,\n    dateLib\n  );\n\n  /** The Months displayed in the calendar. */\n  const months = getMonths(displayMonths, dates, props, dateLib);\n\n  /** The Weeks displayed in the calendar. */\n  const weeks = getWeeks(months);\n\n  /** The Days displayed in the calendar. */\n  const days = getDays(months);\n\n  const previousMonth = getPreviousMonth(firstMonth, navStart, props, dateLib);\n  const nextMonth = getNextMonth(firstMonth, navEnd, props, dateLib);\n\n  const { disableNavigation, onMonthChange } = props;\n\n  const isDayInCalendar = (day: CalendarDay) =>\n    weeks.some((week: CalendarWeek) => week.days.some((d) => d.isEqualTo(day)));\n\n  const goToMonth = (date: Date) => {\n    if (disableNavigation) {\n      return;\n    }\n    let newMonth = startOfMonth(date);\n    // if month is before start, use the first month instead\n    if (navStart && newMonth < startOfMonth(navStart)) {\n      newMonth = startOfMonth(navStart);\n    }\n    // if month is after endMonth, use the last month instead\n    if (navEnd && newMonth > startOfMonth(navEnd)) {\n      newMonth = startOfMonth(navEnd);\n    }\n    setFirstMonth(newMonth);\n    onMonthChange?.(newMonth);\n  };\n\n  const goToDay = (day: CalendarDay) => {\n    // is this check necessary?\n    if (isDayInCalendar(day)) {\n      return;\n    }\n    goToMonth(day.date);\n  };\n\n  const calendar = {\n    months,\n    weeks,\n    days,\n\n    navStart,\n    navEnd,\n\n    previousMonth,\n    nextMonth,\n\n    goToMonth,\n    goToDay\n  };\n\n  return calendar;\n}\n", "import { DateLib, DayPickerProps } from \"../index.js\";\n\n/** The number of days in a month when having 6 weeks. */\nconst NrOfDaysWithFixedWeeks = 42;\n\n/** Return all the dates to display in the calendar. */\nexport function getDates(\n  displayMonths: Date[],\n  maxDate: Date | undefined,\n  props: Pick<\n    DayPickerProps,\n    \"ISOWeek\" | \"fixedWeeks\" | \"locale\" | \"weekStartsOn\" | \"timeZone\"\n  >,\n  dateLib: DateLib\n): Date[] {\n  const firstMonth = displayMonths[0];\n  const lastMonth = displayMonths[displayMonths.length - 1];\n\n  const { ISOWeek, fixedWeeks, locale, weekStartsOn } = props ?? {};\n  const {\n    startOfWeek,\n    endOfWeek,\n    startOfISOWeek,\n    endOfISOWeek,\n    addDays,\n    differenceInCalendarDays,\n    differenceInCalendarMonths,\n    isAfter,\n    endOfMonth\n  } = dateLib;\n\n  const startWeekFirstDate = ISOWeek\n    ? startOfISOWeek(firstMonth)\n    : startOfWeek(firstMonth, {\n        weekStartsOn,\n        locale\n      });\n\n  const endWeekLastDate = ISOWeek\n    ? endOfISOWeek(endOfMonth(lastMonth))\n    : endOfWeek(endOfMonth(lastMonth), {\n        weekStartsOn,\n        locale\n      });\n\n  const nOfDays = differenceInCalendarDays(endWeekLastDate, startWeekFirstDate);\n  const nOfMonths = differenceInCalendarMonths(lastMonth, firstMonth) + 1;\n\n  const dates: Date[] = [];\n  for (let i = 0; i <= nOfDays; i++) {\n    const date = addDays(startWeekFirstDate, i);\n    if (maxDate && isAfter(date, maxDate)) {\n      break;\n    }\n    dates.push(date);\n  }\n\n  // If fixed weeks is enabled, add the extra dates to the array\n  const extraDates = NrOfDaysWithFixedWeeks * nOfMonths;\n  if (fixedWeeks && dates.length < extraDates) {\n    for (let i = 0; i < 7; i++) {\n      const date = addDays(dates[dates.length - 1], 1);\n      dates.push(date);\n    }\n  }\n  return dates;\n}\n", "import type { CalendarDay, CalendarMonth } from \"../classes/index.js\";\n\n/**\n * Returns all the days belonging to the calendar by merging the days in the\n * weeks for each month.\n */\nexport function getDays(calendarMonths: CalendarMonth[]) {\n  const initialDays: CalendarDay[] = [];\n  return calendarMonths.reduce((days, month) => {\n    const initialDays: CalendarDay[] = [];\n    const weekDays: CalendarDay[] = month.weeks.reduce((weekDays, week) => {\n      return [...weekDays, ...week.days];\n    }, initialDays);\n    return [...days, ...weekDays];\n  }, initialDays);\n}\n", "import type { DateLib } from \"../lib/index.js\";\nimport type { DayPickerProps } from \"../types/index.js\";\n\nexport function getDisplayMonths(\n  firstDisplayedMonth: Date,\n  calendarEndMonth: Date | undefined,\n  props: Pick<DayPickerProps, \"numberOfMonths\">,\n  dateLib: DateLib\n) {\n  const { numberOfMonths = 1 } = props;\n  const months: Date[] = [];\n  for (let i = 0; i < numberOfMonths; i++) {\n    const month = dateLib.addMonths(firstDisplayedMonth, i);\n    if (calendarEndMonth && month > calendarEndMonth) {\n      break;\n    }\n    months.push(month);\n  }\n  return months;\n}\n", "import { TZDate } from \"@date-fns/tz\";\n\nimport type { DateLib, DayPickerProps } from \"../index.js\";\n\n/** Return the start month based on the props passed to DayPicker. */\nexport function getInitialMonth(\n  props: Pick<\n    DayPickerProps,\n    | \"fromYear\"\n    | \"toYear\"\n    | \"startMonth\"\n    | \"endMonth\"\n    | \"month\"\n    | \"defaultMonth\"\n    | \"today\"\n    | \"numberOfMonths\"\n    | \"timeZone\"\n  >,\n  dateLib: DateLib\n): Date {\n  const {\n    month,\n    defaultMonth,\n    today = props.timeZone\n      ? TZDate.tz(props.timeZone)\n      : dateLib.Date\n        ? new dateLib.Date()\n        : new Date(),\n    numberOfMonths = 1,\n    endMonth,\n    startMonth\n  } = props;\n  let initialMonth = month || defaultMonth || today;\n  const { differenceInCalendarMonths, addMonths, startOfMonth } = dateLib;\n\n  // Fix the initialMonth if is after the to-date\n  if (endMonth && differenceInCalendarMonths(endMonth, initialMonth) < 0) {\n    const offset = -1 * (numberOfMonths - 1);\n    initialMonth = addMonths(endMonth, offset);\n  }\n  // Fix the initialMonth if is before the from-date\n  if (startMonth && differenceInCalendarMonths(initialMonth, startMonth) < 0) {\n    initialMonth = startMonth;\n  }\n  return startOfMonth(initialMonth);\n}\n", "import type { DateLib } from \"../lib/index.js\";\nimport { dateLib as defaultDateLib } from \"../lib/index.js\";\n\n/**\n * Represent the day displayed in the calendar.\n *\n * In DayPicker, a `Day` is a `Date` that can be displayed in the calendar. It\n * is used as extension of the native `Date` object to provide additional\n * information about the day.\n */\nexport class CalendarDay {\n  constructor(\n    date: Date,\n    displayMonth: Date,\n    /** @ignore */\n    dateLib: DateLib = defaultDateLib\n  ) {\n    this.date = date;\n    this.displayMonth = displayMonth;\n    this.outside = Boolean(\n      displayMonth && !dateLib.isSameMonth(date, displayMonth)\n    );\n    this.dateLib = dateLib;\n  }\n\n  /**\n   * The utility functions to manipulate dates.\n   *\n   * @private\n   */\n  readonly dateLib: DateLib;\n\n  /**\n   * Whether the day is not belonging to the displayed month.\n   *\n   * When `outside` is `true`, use `displayMonth` to know to which month the day\n   * belongs.\n   */\n  readonly outside: boolean;\n\n  /**\n   * The months where the day is displayed.\n   *\n   * In DayPicker, days can fall out the displayed months (e.g. when\n   * `showOutsideDays` is `true`). This property is useful to know if the day is\n   * in the same month of the displayed month.\n   */\n  readonly displayMonth: Date;\n\n  /** The date represented by this day. */\n  readonly date: Date;\n\n  /**\n   * Check if the day is the same as the given day: considering if it is in the\n   * same display month.\n   */\n  isEqualTo(day: CalendarDay) {\n    return (\n      this.dateLib.isSameDay(day.date, this.date) &&\n      this.dateLib.isSameMonth(day.displayMonth, this.displayMonth)\n    );\n  }\n}\n", "import { CalendarWeek } from \"./CalendarWeek.js\";\n\n/** Represent a month in a calendar year. Contains the weeks within the month. */\nexport class CalendarMonth {\n  constructor(month: Date, weeks: CalendarWeek[]) {\n    this.date = month;\n    this.weeks = weeks;\n  }\n\n  /** The date of the month. */\n  date: Date;\n\n  /** The weeks within the month. */\n  weeks: CalendarWeek[];\n}\n", "import { CalendarDay } from \"./CalendarDay.js\";\n\n/** Represent a week in a calendar month. */\nexport class CalendarWeek {\n  constructor(weekNumber: number, days: CalendarDay[]) {\n    this.days = days;\n    this.weekNumber = weekNumber;\n  }\n  /** The number of the week within the year. */\n  weekNumber: number;\n  /** The days within the week. */\n  days: CalendarDay[];\n}\n", "import { CalendarWeek, CalendarDay, CalendarMonth } from \"../classes/index.js\";\nimport type { DateLib } from \"../lib/index.js\";\nimport type { DayPickerProps } from \"../types/index.js\";\n\n/** Return the months to display in the calendar. */\nexport function getMonths(\n  /** The months (as dates) to display in the calendar. */\n  displayMonths: Date[],\n  /** The dates to display in the calendar. */\n  dates: Date[],\n  /** Options from the props context. */\n  props: Pick<\n    DayPickerProps,\n    | \"fixedWeeks\"\n    | \"ISOWeek\"\n    | \"locale\"\n    | \"weekStartsOn\"\n    | \"reverseMonths\"\n    | \"firstWeekContainsDate\"\n    | \"timeZone\"\n  >,\n  dateLib: DateLib\n): CalendarMonth[] {\n  const {\n    startOfWeek,\n    endOfWeek,\n    startOfISOWeek,\n    endOfISOWeek,\n    endOfMonth,\n    addDays,\n    getWeek,\n    getISOWeek\n  } = dateLib;\n  const dayPickerMonths = displayMonths.reduce<CalendarMonth[]>(\n    (months, month) => {\n      const firstDateOfFirstWeek = props.ISOWeek\n        ? startOfISOWeek(month)\n        : startOfWeek(month, {\n            locale: props.locale,\n            weekStartsOn: props.weekStartsOn\n          });\n\n      const lastDateOfLastWeek = props.ISOWeek\n        ? endOfISOWeek(endOfMonth(month))\n        : endOfWeek(endOfMonth(month), {\n            locale: props.locale,\n            weekStartsOn: props.weekStartsOn\n          });\n\n      /** The dates to display in the month. */\n      const monthDates = dates.filter((date) => {\n        return date >= firstDateOfFirstWeek && date <= lastDateOfLastWeek;\n      });\n\n      if (props.fixedWeeks && monthDates.length < 42) {\n        const extraDates = dates.filter((date) => {\n          return (\n            date > lastDateOfLastWeek && date <= addDays(lastDateOfLastWeek, 7)\n          );\n        });\n        monthDates.push(...extraDates);\n      }\n\n      const weeks: CalendarWeek[] = monthDates.reduce<CalendarWeek[]>(\n        (weeks, date) => {\n          const weekNumber = props.ISOWeek\n            ? getISOWeek(date)\n            : getWeek(date, {\n                locale: props.locale,\n                weekStartsOn: props.weekStartsOn,\n                firstWeekContainsDate: props.firstWeekContainsDate\n              });\n          const week = weeks.find((week) => week.weekNumber === weekNumber);\n\n          const day = new CalendarDay(date, month, dateLib);\n          if (!week) {\n            weeks.push(new CalendarWeek(weekNumber, [day]));\n          } else {\n            week.days.push(day);\n          }\n          return weeks;\n        },\n        []\n      );\n\n      const dayPickerMonth = new CalendarMonth(month, weeks);\n\n      months.push(dayPickerMonth);\n      return months;\n    },\n    []\n  );\n\n  if (!props.reverseMonths) {\n    return dayPickerMonths;\n  } else {\n    return dayPickerMonths.reverse();\n  }\n}\n", "import { TZDate } from \"@date-fns/tz\";\n\nimport type { DateLib } from \"../lib/index.js\";\nimport type { DayPickerProps } from \"../types/index.js\";\n\n/** Return the start and end months for the calendar navigation. */\nexport function getNavMonths(\n  props: Pick<\n    DayPickerProps,\n    | \"captionLayout\"\n    | \"endMonth\"\n    | \"startMonth\"\n    | \"today\"\n    | \"timeZone\"\n    | \"dateLib\"\n    // Deprecated:\n    | \"fromMonth\"\n    | \"fromYear\"\n    | \"toMonth\"\n    | \"toYear\"\n  >,\n  dateLib: DateLib\n): [start: Date | undefined, end: Date | undefined] {\n  let { startMonth, endMonth } = props;\n\n  const {\n    startOfYear,\n    startOfDay,\n    startOfMonth,\n    endOfMonth,\n    addYears,\n    endOfYear\n  } = dateLib;\n\n  // Handle deprecated code\n  const { fromYear, toYear, fromMonth, toMonth } = props;\n  if (!startMonth && fromMonth) {\n    startMonth = fromMonth;\n  }\n  if (!startMonth && fromYear) {\n    startMonth = new Date(fromYear, 0, 1);\n  }\n  if (!endMonth && toMonth) {\n    endMonth = toMonth;\n  }\n  if (!endMonth && toYear) {\n    endMonth = new Date(toYear, 11, 31);\n  }\n\n  const hasDropdowns = props.captionLayout?.startsWith(\"dropdown\");\n  if (startMonth) {\n    startMonth = startOfMonth(startMonth);\n  } else if (fromYear) {\n    startMonth = new Date(fromYear, 0, 1);\n  } else if (!startMonth && hasDropdowns) {\n    const today =\n      props.today ??\n      (props.timeZone\n        ? TZDate.tz(props.timeZone)\n        : dateLib.Date\n          ? new dateLib.Date()\n          : new Date());\n    startMonth = startOfYear(addYears(today, -100));\n  }\n  if (endMonth) {\n    endMonth = endOfMonth(endMonth);\n  } else if (toYear) {\n    endMonth = new Date(toYear, 11, 31);\n  } else if (!endMonth && hasDropdowns) {\n    const today =\n      props.today ??\n      (props.timeZone\n        ? TZDate.tz(props.timeZone)\n        : dateLib.Date\n          ? new dateLib.Date()\n          : new Date());\n    endMonth = endOfYear(today);\n  }\n  return [\n    startMonth ? startOfDay(startMonth) : startMonth,\n    endMonth ? startOfDay(endMonth) : endMonth\n  ];\n}\n", "import type { DateLib } from \"../lib/index.js\";\nimport type { DayPickerProps } from \"../types/index.js\";\n\n/**\n * Return the next month the user can navigate to according to the given\n * options.\n *\n * Please note that the next month is not always the next calendar month:\n *\n * - If after the `calendarEndMonth` range, is `undefined`;\n * - If the navigation is paged , is the number of months displayed ahead.\n */\nexport function getNextMonth(\n  firstDisplayedMonth: Date,\n  calendarEndMonth: Date | undefined,\n  options: Pick<\n    DayPickerProps,\n    \"numberOfMonths\" | \"pagedNavigation\" | \"disableNavigation\"\n  >,\n  dateLib: DateLib\n): Date | undefined {\n  if (options.disableNavigation) {\n    return undefined;\n  }\n  const { pagedNavigation, numberOfMonths = 1 } = options;\n  const { startOfMonth, addMonths, differenceInCalendarMonths } = dateLib;\n  const offset = pagedNavigation ? numberOfMonths : 1;\n  const month = startOfMonth(firstDisplayedMonth);\n\n  if (!calendarEndMonth) {\n    return addMonths(month, offset);\n  }\n\n  const monthsDiff = differenceInCalendarMonths(\n    calendarEndMonth,\n    firstDisplayedMonth\n  );\n\n  if (monthsDiff < numberOfMonths) {\n    return undefined;\n  }\n\n  // Jump forward as the number of months when paged navigation\n  return addMonths(month, offset);\n}\n", "import type { DateLib } from \"../lib/index.js\";\nimport type { DayPickerProps } from \"../types/index.js\";\n\n/**\n * Return the next previous the user can navigate to, according to the given\n * options.\n *\n * Please note that the previous month is not always the previous calendar\n * month:\n *\n * - If before the `calendarStartMonth` date, is `undefined`;\n * - If the navigation is paged, is the number of months displayed before.\n */\nexport function getPreviousMonth(\n  firstDisplayedMonth: Date,\n  calendarStartMonth: Date | undefined,\n  options: Pick<\n    DayPickerProps,\n    \"numberOfMonths\" | \"pagedNavigation\" | \"disableNavigation\"\n  >,\n  dateLib: DateLib\n): Date | undefined {\n  if (options.disableNavigation) {\n    return undefined;\n  }\n  const { pagedNavigation, numberOfMonths } = options;\n  const { startOfMonth, addMonths, differenceInCalendarMonths } = dateLib;\n  const offset = pagedNavigation ? (numberOfMonths ?? 1) : 1;\n  const month = startOfMonth(firstDisplayedMonth);\n  if (!calendarStartMonth) {\n    return addMonths(month, -offset);\n  }\n  const monthsDiff = differenceInCalendarMonths(month, calendarStartMonth);\n\n  if (monthsDiff <= 0) {\n    return undefined;\n  }\n\n  return addMonths(month, -offset);\n}\n", "import type { CalendarMonth, CalendarWeek } from \"../classes/index.js\";\n\n/** Returns an array of calendar weeks from an array of calendar months. */\nexport function getWeeks(months: CalendarMonth[]) {\n  const initialWeeks: CalendarWeek[] = [];\n  return months.reduce((weeks, month) => {\n    return [...weeks, ...month.weeks];\n  }, initialWeeks);\n}\n", "import { useState } from \"react\";\n\nexport type DispatchStateAction<T> = React.Dispatch<React.SetStateAction<T>>;\n\n/**\n * A custom hook for managing both controlled and uncontrolled component states.\n *\n * @example\n *   // Uncontrolled usage\n *   const [value, setValue] = useControlledValue(0, undefined);\n *\n *   // Controlled usage\n *   const [value, setValue] = useControlledValue(0, props.value);\n *\n * @template T - The type of the value.\n * @param {T} defaultValue - The initial value for the uncontrolled state.\n * @param {T | undefined} controlledValue - The value for the controlled state.\n *   If undefined, the component will use the uncontrolled state.\n * @returns {[T, DispatchStateAction<T>]} - Returns a tuple where the first\n *   element is the current value (either controlled or uncontrolled) and the\n *   second element is a setter function to update the value.\n */\nexport function useControlledValue<T>(\n  defaultValue: T,\n  controlledValue: T | undefined\n): [T, DispatchStateAction<T>] {\n  const [uncontrolledValue, setValue] = useState(defaultValue);\n\n  const value =\n    controlledValue === undefined ? uncontrolledValue : controlledValue;\n\n  return [value, setValue] as [T, DispatchStateAction<T>];\n}\n", "import { useState } from \"react\";\n\nimport type { CalendarDay } from \"./classes/index.js\";\nimport { calculateFocusTarget } from \"./helpers/calculateFocusTarget.js\";\nimport { getNextFocus } from \"./helpers/getNextFocus.js\";\nimport type { DateLib } from \"./lib/index.js\";\nimport type {\n  MoveFocusBy,\n  MoveFocusDir,\n  DayPickerProps,\n  Modifiers\n} from \"./types/index.js\";\nimport { Calendar } from \"./useCalendar.js\";\n\nexport type UseFocus = {\n  /** The date that is currently focused. */\n  focused: CalendarDay | undefined;\n\n  /** Check if the given day is the focus target when entering the calendar. */\n  isFocusTarget: (day: CalendarDay) => boolean;\n\n  /** Focus the given day. */\n  setFocused: (day: CalendarDay | undefined) => void;\n\n  /** Blur the focused day. */\n  blur: () => void;\n\n  /** Move the current focus to the next day according to the given direction. */\n  moveFocus: (moveBy: MoveFocusBy, moveDir: MoveFocusDir) => void;\n};\n\n/** @private */\nexport function useFocus<T extends DayPickerProps>(\n  props: T,\n  calendar: Calendar,\n  getModifiers: (day: CalendarDay) => Modifiers,\n  isSelected: (date: Date) => boolean,\n  dateLib: DateLib\n): UseFocus {\n  const { autoFocus } = props;\n  const [lastFocused, setLastFocused] = useState<CalendarDay | undefined>();\n\n  const focusTarget = calculateFocusTarget(\n    calendar.days,\n    getModifiers,\n    isSelected || (() => false),\n    lastFocused\n  );\n  const [focusedDay, setFocused] = useState<CalendarDay | undefined>(\n    autoFocus ? focusTarget : undefined\n  );\n\n  const blur = () => {\n    setLastFocused(focusedDay);\n    setFocused(undefined);\n  };\n\n  const moveFocus = (moveBy: MoveFocusBy, moveDir: MoveFocusDir) => {\n    if (!focusedDay) return;\n    const nextFocus = getNextFocus(\n      moveBy,\n      moveDir,\n      focusedDay,\n      calendar.navStart,\n      calendar.navEnd,\n      props,\n      dateLib\n    );\n    if (!nextFocus) return;\n\n    calendar.goToDay(nextFocus);\n    setFocused(nextFocus);\n  };\n\n  const isFocusTarget = (day: CalendarDay) => {\n    return Boolean(focusTarget?.isEqualTo(day));\n  };\n\n  const useFocus: UseFocus = {\n    isFocusTarget,\n    setFocused,\n    focused: focusedDay,\n    blur,\n    moveFocus\n  };\n\n  return useFocus;\n}\n", "import { DayFlag } from \"../UI.js\";\nimport type { CalendarDay } from \"../classes/index.js\";\nimport type { Modifiers } from \"../types/index.js\";\n\nexport function calculateFocusTarget(\n  days: CalendarDay[],\n  getModifiers: (day: CalendarDay) => Modifiers,\n  isSelected: (date: Date) => boolean,\n  lastFocused: CalendarDay | undefined\n) {\n  let focusTarget: CalendarDay | undefined;\n\n  let index = 0;\n  let found = false;\n\n  while (index < days.length && !found) {\n    const day = days[index];\n    const modifiers = getModifiers(day);\n\n    if (\n      !modifiers[DayFlag.disabled] &&\n      !modifiers[DayFlag.hidden] &&\n      !modifiers[DayFlag.outside]\n    ) {\n      if (modifiers[DayFlag.focused]) {\n        focusTarget = day;\n        found = true;\n      } else if (lastFocused?.isEqualTo(day)) {\n        focusTarget = day;\n        found = true;\n      } else if (isSelected(day.date)) {\n        focusTarget = day;\n        found = true;\n      } else if (modifiers[DayFlag.today]) {\n        focusTarget = day;\n        found = true;\n      }\n    }\n\n    index++;\n  }\n\n  if (!focusTarget) {\n    // return the first day that is focusable\n    focusTarget = days.find((day) => {\n      const m = getModifiers(day);\n      return !m[DayFlag.disabled] && !m[DayFlag.hidden] && !m[DayFlag.outside];\n    });\n  }\n  return focusTarget;\n}\n", "import { dateLib as defaultDateLib, type DateLib } from \"../lib/index.js\";\nimport type { DateRange } from \"../types/index.js\";\n\n/**\n * Determines whether a given date is inside a specified date range.\n *\n * @since 9.0.0\n * @group Utilities\n */\nexport function rangeIncludesDate(\n  range: DateRange,\n  date: Date,\n  /** If `true`, the ends of the range are excluded. */\n  excludeEnds = false,\n  /** @ignore */\n  dateLib: DateLib = defaultDateLib\n): boolean {\n  let { from, to } = range;\n  const { differenceInCalendarDays, isSameDay } = dateLib;\n  if (from && to) {\n    const isRangeInverted = differenceInCalendarDays(to, from) < 0;\n    if (isRangeInverted) {\n      [from, to] = [to, from];\n    }\n    const isInRange =\n      differenceInCalendarDays(date, from) >= (excludeEnds ? 1 : 0) &&\n      differenceInCalendarDays(to, date) >= (excludeEnds ? 1 : 0);\n    return isInRange;\n  }\n  if (!excludeEnds && to) {\n    return isSameDay(to, date);\n  }\n  if (!excludeEnds && from) {\n    return isSameDay(from, date);\n  }\n  return false;\n}\n\n/**\n * @private\n * @deprecated Use {@link rangeIncludesDate} instead.\n */\nexport const isDateInRange = (range: DateRange, date: Date) =>\n  rangeIncludesDate(range, date, false, defaultDateLib);\n", "import type { DateLib } from \"../lib/index.js\";\nimport type {\n  DateAfter,\n  DateBefore,\n  DateInterval,\n  DateRange,\n  DayOfWeek\n} from \"../types/index.js\";\n\n/**\n * Returns true if `matcher` is of type {@link DateInterval}.\n *\n * @group Utilities\n */\nexport function isDateInterval(matcher: unknown): matcher is DateInterval {\n  return Boolean(\n    matcher &&\n      typeof matcher === \"object\" &&\n      \"before\" in matcher &&\n      \"after\" in matcher\n  );\n}\n\n/**\n * Returns true if `value` is a {@link DateRange} type.\n *\n * @group Utilities\n */\nexport function isDateRange(value: unknown): value is DateRange {\n  return Boolean(value && typeof value === \"object\" && \"from\" in value);\n}\n\n/**\n * Returns true if `value` is of type {@link DateAfter}.\n *\n * @group Utilities\n */\nexport function isDateAfterType(value: unknown): value is DateAfter {\n  return Boolean(value && typeof value === \"object\" && \"after\" in value);\n}\n\n/**\n * Returns true if `value` is of type {@link DateBefore}.\n *\n * @group Utilities\n */\nexport function isDateBeforeType(value: unknown): value is DateBefore {\n  return Boolean(value && typeof value === \"object\" && \"before\" in value);\n}\n\n/**\n * Returns true if `value` is a {@link DayOfWeek} type.\n *\n * @group Utilities\n */\nexport function isDayOfWeekType(value: unknown): value is DayOfWeek {\n  return Boolean(value && typeof value === \"object\" && \"dayOfWeek\" in value);\n}\n\n/**\n * Returns true if `value` is an array of valid dates.\n *\n * @private\n */\nexport function isDatesArray(\n  value: unknown,\n  dateLib: DateLib\n): value is Date[] {\n  return Array.isArray(value) && value.every(dateLib.isDate);\n}\n", "import { dateLib as defaultDateLib, type DateLib } from \"../lib/dateLib.js\";\nimport type { Matcher } from \"../types/index.js\";\n\nimport { rangeIncludesDate } from \"./rangeIncludesDate.js\";\nimport {\n  isDateAfterType,\n  isDateBeforeType,\n  isDateInterval,\n  isDateRange,\n  isDatesArray,\n  isDayOfWeekType\n} from \"./typeguards.js\";\n\n/**\n * Returns whether a day matches against at least one of the given\n * {@link Matcher}.\n *\n * ```tsx\n * const date = new Date(2022, 5, 19);\n * const matcher1: DateRange = {\n *  from: new Date(2021, 12, 21),\n *  to: new Date(2021, 12, 30)\n * }\n * const matcher2: DateRange = {\n *  from: new Date(2022, 5, 1),\n *  to: new Date(2022, 5, 23)\n * }\n * const dateMatchModifiers(date, [matcher1, matcher2]); // true, since day is in the matcher1 range.\n * ```\n *\n * @group Utilities\n */\nexport function dateMatchModifiers(\n  date: Date,\n  matchers: Matcher | Matcher[],\n  dateLib: DateLib = defaultDateLib\n): boolean {\n  const matchersArr = !Array.isArray(matchers) ? [matchers] : matchers;\n  const { isSameDay, differenceInCalendarDays, isAfter } = dateLib;\n  return matchersArr.some((matcher: Matcher) => {\n    if (typeof matcher === \"boolean\") {\n      return matcher;\n    }\n    if (dateLib.isDate(matcher)) {\n      return isSameDay(date, matcher);\n    }\n    if (isDatesArray(matcher, dateLib)) {\n      return matcher.includes(date);\n    }\n    if (isDateRange(matcher)) {\n      return rangeIncludesDate(matcher, date, false, dateLib);\n    }\n    if (isDayOfWeekType(matcher)) {\n      if (!Array.isArray(matcher.dayOfWeek)) {\n        return matcher.dayOfWeek === date.getDay();\n      }\n      return matcher.dayOfWeek.includes(date.getDay());\n    }\n    if (isDateInterval(matcher)) {\n      const diffBefore = differenceInCalendarDays(matcher.before, date);\n      const diffAfter = differenceInCalendarDays(matcher.after, date);\n      const isDayBefore = diffBefore > 0;\n      const isDayAfter = diffAfter < 0;\n      const isClosedInterval = isAfter(matcher.before, matcher.after);\n      if (isClosedInterval) {\n        return isDayAfter && isDayBefore;\n      } else {\n        return isDayBefore || isDayAfter;\n      }\n    }\n    if (isDateAfterType(matcher)) {\n      return differenceInCalendarDays(date, matcher.after) > 0;\n    }\n    if (isDateBeforeType(matcher)) {\n      return differenceInCalendarDays(matcher.before, date) > 0;\n    }\n    if (typeof matcher === \"function\") {\n      return matcher(date);\n    }\n    return false;\n  });\n}\n\n/**\n * @private\n * @deprecated Use {@link dateMatchModifiers} instead.\n */\nexport const isMatch = dateMatchModifiers;\n", "import type { DateLib } from \"../lib/index.js\";\nimport type {\n  DayPickerProps,\n  MoveFocusBy,\n  MoveFocusDir\n} from \"../types/index.js\";\n\n/** Return the next date that should be focused. */\nexport function getFocusableDate(\n  moveBy: MoveFocusBy,\n  moveDir: MoveFocusDir,\n  refDate: Date,\n  navStart: Date | undefined,\n  navEnd: Date | undefined,\n  props: Pick<DayPickerProps, \"locale\" | \"ISOWeek\" | \"weekStartsOn\">,\n  dateLib: DateLib\n): Date {\n  const { weekStartsOn, locale, ISOWeek } = props;\n  const {\n    addDays,\n    addMonths,\n    addYears,\n    addWeeks,\n    startOfISOWeek,\n    endOfISOWeek,\n    startOfWeek,\n    endOfWeek,\n    max,\n    min\n  } = dateLib;\n  const moveFns = {\n    day: addDays,\n    week: addWeeks,\n    month: addMonths,\n    year: addYears,\n    startOfWeek: (date: Date) =>\n      ISOWeek\n        ? startOfISOWeek(date)\n        : startOfWeek(date, { locale, weekStartsOn }),\n    endOfWeek: (date: Date) =>\n      ISOWeek ? endOfISOWeek(date) : endOfWeek(date, { locale, weekStartsOn })\n  };\n\n  let focusableDate = moveFns[moveBy](refDate, moveDir === \"after\" ? 1 : -1);\n  if (moveDir === \"before\" && navStart) {\n    focusableDate = max([navStart, focusableDate]);\n  } else if (moveDir === \"after\" && navEnd) {\n    focusableDate = min([navEnd, focusableDate]);\n  }\n  return focusableDate;\n}\n", "import { CalendarDay } from \"../classes/index.js\";\nimport type { DateLib } from \"../lib/index.js\";\nimport type {\n  DayPickerProps,\n  MoveFocusBy,\n  MoveFocusDir\n} from \"../types/index.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\n\nimport { getFocusableDate } from \"./getFocusableDate.js\";\n\nexport function getNextFocus(\n  moveBy: MoveFocusBy,\n  moveDir: MoveFocusDir,\n  /** The date that is currently focused. */\n  refDay: CalendarDay,\n  calendarStartMonth: Date | undefined,\n  calendarEndMonth: Date | undefined,\n  props: Pick<\n    DayPickerProps,\n    | \"disabled\"\n    | \"hidden\"\n    | \"modifiers\"\n    | \"locale\"\n    | \"ISOWeek\"\n    | \"weekStartsOn\"\n    | \"timeZone\"\n  >,\n  dateLib: DateLib,\n  attempt: number = 0\n): CalendarDay | undefined {\n  if (attempt > 365) {\n    // Limit the recursion to 365 attempts\n    return undefined;\n  }\n\n  const focusableDate = getFocusableDate(\n    moveBy,\n    moveDir,\n    refDay.date, // should be refDay? or refDay.date?\n    calendarStartMonth,\n    calendarEndMonth,\n    props,\n    dateLib\n  );\n\n  const isDisabled = Boolean(\n    props.disabled && dateMatchModifiers(focusableDate, props.disabled, dateLib)\n  );\n\n  const isHidden = Boolean(\n    props.hidden && dateMatchModifiers(focusableDate, props.hidden, dateLib)\n  );\n\n  const targetMonth = focusableDate;\n  const focusDay = new CalendarDay(focusableDate, targetMonth, dateLib);\n\n  if (!isDisabled && !isHidden) {\n    return focusDay;\n  }\n\n  // Recursively attempt to find the next focusable date\n  return getNextFocus(\n    moveBy,\n    moveDir,\n    focusDay,\n    calendarStartMonth,\n    calendarEndMonth,\n    props,\n    dateLib,\n    attempt + 1\n  );\n}\n", "import { TZDate } from \"@date-fns/tz\";\n\nimport { DayFlag, SelectionState } from \"./UI.js\";\nimport { CalendarDay } from \"./classes/index.js\";\nimport type { DateLib } from \"./lib/index.js\";\nimport type { DayPickerProps, Modifiers } from \"./types/index.js\";\nimport { dateMatchModifiers } from \"./utils/dateMatchModifiers.js\";\n\n/**\n * Return a function to get the modifiers for a given day.\n *\n * @private\n */\nexport function useGetModifiers(\n  days: CalendarDay[],\n  props: DayPickerProps,\n  dateLib: DateLib\n) {\n  const { disabled, hidden, modifiers, showOutsideDays, today } = props;\n\n  const { isSameDay, isSameMonth } = dateLib;\n\n  const internalModifiersMap: Record<DayFlag, CalendarDay[]> = {\n    [DayFlag.focused]: [],\n    [DayFlag.outside]: [],\n    [DayFlag.disabled]: [],\n    [DayFlag.hidden]: [],\n    [DayFlag.today]: []\n  };\n\n  const customModifiersMap: Record<string, CalendarDay[]> = {};\n\n  const selectionModifiersMap: Record<SelectionState, CalendarDay[]> = {\n    [SelectionState.range_end]: [],\n    [SelectionState.range_middle]: [],\n    [SelectionState.range_start]: [],\n    [SelectionState.selected]: []\n  };\n\n  for (const day of days) {\n    const { date, displayMonth } = day;\n\n    const isOutside = Boolean(displayMonth && !isSameMonth(date, displayMonth));\n\n    const isDisabled = Boolean(\n      disabled && dateMatchModifiers(date, disabled, dateLib)\n    );\n\n    const isHidden =\n      Boolean(hidden && dateMatchModifiers(date, hidden, dateLib)) ||\n      (!showOutsideDays && isOutside);\n\n    const isToday = isSameDay(\n      date,\n      today ??\n        (props.timeZone\n          ? TZDate.tz(props.timeZone)\n          : dateLib.Date\n            ? new dateLib.Date()\n            : new Date())\n    );\n\n    if (isOutside) internalModifiersMap.outside.push(day);\n    if (isDisabled) internalModifiersMap.disabled.push(day);\n    if (isHidden) internalModifiersMap.hidden.push(day);\n    if (isToday) internalModifiersMap.today.push(day);\n\n    // Add custom modifiers\n    if (modifiers) {\n      Object.keys(modifiers).forEach((name) => {\n        const modifierValue = modifiers?.[name];\n        const isMatch = modifierValue\n          ? dateMatchModifiers(date, modifierValue, dateLib)\n          : false;\n        if (!isMatch) return;\n        if (customModifiersMap[name]) {\n          customModifiersMap[name].push(day);\n        } else {\n          customModifiersMap[name] = [day];\n        }\n      });\n    }\n  }\n\n  return (day: CalendarDay) => {\n    // Initialize all the modifiers to false\n    const dayFlags: Record<DayFlag, boolean> = {\n      [DayFlag.focused]: false,\n      [DayFlag.disabled]: false,\n      [DayFlag.hidden]: false,\n      [DayFlag.outside]: false,\n      [DayFlag.today]: false\n    };\n    const selectionStates: Record<SelectionState, boolean> = {\n      [SelectionState.range_end]: false,\n      [SelectionState.range_middle]: false,\n      [SelectionState.range_start]: false,\n      [SelectionState.selected]: false\n    };\n    const customModifiers: Modifiers = {};\n\n    // Find the modifiers for the given day\n    for (const name in internalModifiersMap) {\n      const days = internalModifiersMap[name as DayFlag];\n      dayFlags[name as DayFlag] = days.some((d) => d === day);\n    }\n    for (const name in selectionModifiersMap) {\n      const days = selectionModifiersMap[name as SelectionState];\n      selectionStates[name as SelectionState] = days.some((d) => d === day);\n    }\n    for (const name in customModifiersMap) {\n      customModifiers[name] = customModifiersMap[name].some((d) => d === day);\n    }\n\n    return {\n      ...selectionStates,\n      ...dayFlags,\n      // custom modifiers should override all the previous ones\n      ...customModifiers\n    } as Modifiers;\n  };\n}\n", "import React from \"react\";\n\nimport { useControlledValue } from \"../helpers/useControlledValue.js\";\nimport type { DateLib } from \"../lib/dateLib.js\";\nimport type {\n  DayPickerProps,\n  Modifiers,\n  PropsMulti,\n  Selection\n} from \"../types/index.js\";\n\nexport function useMulti<T extends DayPickerProps>(\n  props: T,\n  dateLib: DateLib\n): Selection<T> {\n  const {\n    selected: initiallySelected,\n    required,\n    onSelect\n  } = props as PropsMulti;\n\n  const [internallySelected, setSelected] = useControlledValue(\n    initiallySelected,\n    onSelect ? initiallySelected : undefined\n  );\n\n  const selected = !onSelect ? internallySelected : initiallySelected;\n\n  const { isSameDay } = dateLib;\n\n  const isSelected = (date: Date) => {\n    return selected?.some((d) => isSameDay(d, date)) ?? false;\n  };\n\n  const { min, max } = props as PropsMulti;\n\n  const select = (\n    triggerDate: Date,\n    modifiers: Modifiers,\n    e: React.MouseEvent | React.KeyboardEvent\n  ) => {\n    let newDates: Date[] | undefined = [...(selected ?? [])];\n    if (isSelected(triggerDate)) {\n      if (selected?.length === min) {\n        // Min value reached, do nothing\n        return;\n      }\n      if (required && selected?.length === 1) {\n        // Required value already selected do nothing\n        return;\n      }\n      newDates = selected?.filter((d) => !isSameDay(d, triggerDate));\n    } else {\n      if (selected?.length === max) {\n        // Max value reached, reset the selection to date\n        newDates = [triggerDate];\n      } else {\n        // Add the date to the selection\n        newDates = [...newDates, triggerDate];\n      }\n    }\n    if (!onSelect) {\n      setSelected(newDates);\n    }\n    onSelect?.(newDates, triggerDate, modifiers, e);\n    return newDates;\n  };\n\n  return {\n    selected,\n    select,\n    isSelected\n  } as Selection<T>;\n}\n", "import { dateLib as defaultDateLib, type DateLib } from \"../lib/index.js\";\nimport type { DateRange } from \"../types/index.js\";\n\n/**\n * Add a day to an existing range.\n *\n * The returned range takes in account the `undefined` values and if the added\n * day is already present in the range.\n *\n * @group Utilities\n */\nexport function addToRange(\n  /** The date to add to the range. */\n  date: Date,\n  /** The range where to add `date`. */\n  initialRange: DateRange | undefined,\n  min = 0,\n  max = 0,\n  required = false,\n  /** @ignore */\n  dateLib: DateLib = defaultDateLib\n): DateRange | undefined {\n  const { from, to } = initialRange || {};\n  const { isSameDay, isAfter, isBefore } = dateLib;\n\n  let range: DateRange | undefined;\n\n  if (!from && !to) {\n    // the range is empty, add the date\n    range = { from: date, to: min > 0 ? undefined : date };\n  } else if (from && !to) {\n    // adding date to an incomplete range\n    if (isSameDay(from, date)) {\n      // adding a date equal to the start of the range\n      if (required) {\n        range = { from, to: undefined };\n      } else {\n        range = undefined;\n      }\n    } else if (isBefore(date, from)) {\n      // adding a date before the start of the range\n      range = { from: date, to: from };\n    } else {\n      // adding a date after the start of the range\n      range = { from, to: date };\n    }\n  } else if (from && to) {\n    // adding date to a complete range\n    if (isSameDay(from, date) && isSameDay(to, date)) {\n      // adding a date that is equal to both start and end of the range\n      if (required) {\n        range = { from, to };\n      } else {\n        range = undefined;\n      }\n    } else if (isSameDay(from, date)) {\n      // adding a date equal to the the start of the range\n      range = { from, to: min > 0 ? undefined : date };\n    } else if (isSameDay(to, date)) {\n      // adding a dare equal to the end of the range\n      range = { from: date, to: min > 0 ? undefined : date };\n    } else if (isBefore(date, from)) {\n      // adding a date before the start of the range\n      range = { from: date, to: to };\n    } else if (isAfter(date, from)) {\n      // adding a date after the start of the range\n      range = { from, to: date };\n    } else if (isAfter(date, to)) {\n      // adding a date after the end of the range\n      range = { from, to: date };\n    } else {\n      throw new Error(\"Invalid range\");\n    }\n  }\n\n  // check for min / max\n  if (range?.from && range?.to) {\n    const diff = dateLib.differenceInCalendarDays(range.to, range.from);\n    if (max > 0 && diff > max) {\n      range = { from: date, to: undefined };\n    } else if (min > 1 && diff < min) {\n      range = { from: date, to: undefined };\n    }\n  }\n\n  return range;\n}\n", "import React from \"react\";\n\nimport { useControlledValue } from \"../helpers/useControlledValue.js\";\nimport type { DateLib } from \"../lib/index.js\";\nimport type {\n  DayPickerProps,\n  Modifiers,\n  PropsRange,\n  Selection\n} from \"../types/index.js\";\nimport { addToRange, dateMatchModifiers } from \"../utils/index.js\";\nimport { rangeIncludesDate } from \"../utils/rangeIncludesDate.js\";\n\nexport function useRange<T extends DayPickerProps>(\n  props: T,\n  dateLib: DateLib\n): Selection<T> {\n  const {\n    disabled,\n    excludeDisabled,\n    selected: initiallySelected,\n    required,\n    onSelect\n  } = props as PropsRange;\n\n  const [internallySelected, setSelected] = useControlledValue(\n    initiallySelected,\n    onSelect ? initiallySelected : undefined\n  );\n\n  const selected = !onSelect ? internallySelected : initiallySelected;\n\n  const isSelected = (date: Date) =>\n    selected && rangeIncludesDate(selected, date, false, dateLib);\n\n  const select = (\n    triggerDate: Date,\n    modifiers: Modifiers,\n    e: React.MouseEvent | React.KeyboardEvent\n  ) => {\n    const { min, max } = props as PropsRange;\n    const newRange = triggerDate\n      ? addToRange(triggerDate, selected, min, max, required, dateLib)\n      : undefined;\n\n    if (newRange?.from && newRange.to) {\n      let newDate = newRange.from;\n      while (dateLib.differenceInCalendarDays(newRange.to, newDate) > 0) {\n        newDate = dateLib.addDays(newDate, 1);\n        if (\n          excludeDisabled &&\n          disabled &&\n          dateMatchModifiers(newDate, disabled, dateLib)\n        ) {\n          // if a disabled days is found, the range is reset\n          newRange.from = triggerDate;\n          newRange.to = undefined;\n          break;\n        }\n      }\n    }\n\n    if (!onSelect) {\n      setSelected(newRange);\n    }\n    onSelect?.(newRange, triggerDate, modifiers, e);\n\n    return newRange;\n  };\n\n  return {\n    selected,\n    select,\n    isSelected\n  } as Selection<T>;\n}\n", "import React from \"react\";\n\nimport { useControlledValue } from \"../helpers/useControlledValue.js\";\nimport type { DateLib } from \"../lib/index.js\";\nimport type {\n  DayPickerProps,\n  Modifiers,\n  PropsSingle,\n  SelectHandler,\n  SelectedValue,\n  Selection\n} from \"../types/index.js\";\n\nexport type UseSingle<T extends DayPickerProps> = {\n  select: SelectHandler<T>;\n  isSelected: (date: Date) => boolean;\n  selected: SelectedValue<T>;\n};\n\nexport function useSingle<T extends DayPickerProps>(\n  props: DayPickerProps,\n  dateLib: DateLib\n): Selection<T> {\n  const {\n    selected: initiallySelected,\n    required,\n    onSelect\n  } = props as PropsSingle;\n\n  const [internallySelected, setSelected] = useControlledValue(\n    initiallySelected,\n    onSelect ? initiallySelected : undefined\n  );\n\n  const selected = !onSelect ? internallySelected : initiallySelected;\n\n  const { isSameDay } = dateLib;\n\n  const isSelected = (compareDate: Date) => {\n    return selected ? isSameDay(selected, compareDate) : false;\n  };\n\n  const select = (\n    triggerDate: Date,\n    modifiers: Modifiers,\n    e: React.MouseEvent | React.KeyboardEvent\n  ) => {\n    let newDate: Date | undefined = triggerDate;\n    if (!required && selected && selected && isSameDay(triggerDate, selected)) {\n      // If the date is the same, clear the selection.\n      newDate = undefined;\n    }\n    if (!onSelect) {\n      setSelected(newDate);\n    }\n    if (required) {\n      onSelect?.(newDate as Date, triggerDate, modifiers, e);\n    } else {\n      onSelect?.(newDate, triggerDate, modifiers, e);\n    }\n    return newDate;\n  };\n\n  return {\n    selected,\n    select,\n    isSelected\n  } as Selection<T>;\n}\n", "import { type DateLib } from \"./lib/index.js\";\nimport { useMulti } from \"./selection/useMulti.js\";\nimport { useRange } from \"./selection/useRange.js\";\nimport { useSingle } from \"./selection/useSingle.js\";\nimport type { DayPickerProps } from \"./types/index.js\";\nimport { Selection } from \"./types/selection.js\";\n\nexport function useSelection<T extends DayPickerProps>(\n  props: T,\n  dateLib: DateLib\n): Selection<T> | undefined {\n  const single = useSingle(props, dateLib);\n  const multi = useMulti(props, dateLib);\n  const range = useRange(props, dateLib);\n\n  switch (props.mode) {\n    case \"single\":\n      return single;\n    case \"multiple\":\n      return multi;\n    case \"range\":\n      return range;\n    default:\n      return undefined;\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  MonthCaption,\n  type MonthCaptionProps\n} from \"../components/MonthCaption.js\";\nimport { Week, type WeekProps } from \"../components/Week.js\";\nimport {\n  labelDayButton,\n  labelNext,\n  labelWeekday,\n  labelWeekNumber\n} from \"../labels/index.js\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n\nimport type { PropsMulti, PropsRange, PropsSingle } from \"./props.js\";\nimport type { Mode, DayEventHandler } from \"./shared.js\";\n\n/**\n * @deprecated This type will be removed.\n * @protected\n */\nexport type RootProvider = any;\n\n/**\n * @deprecated This type will be removed.\n * @protected\n */\nexport type RootProviderProps = any;\n\n/**\n * @deprecated This component has been renamed. Use `MonthCaption` instead.\n * @protected\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport const Caption = MonthCaption;\n\n/**\n * @deprecated This type has been renamed. Use `MonthCaptionProps` instead.\n * @protected\n */\nexport type CaptionProps = MonthCaptionProps;\n\n/**\n * @deprecated This component has been removed.\n * @protected\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport type HeadRow = any;\n\n/**\n * @deprecated This component has been renamed. Use `Week` instead.\n * @protected\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport const Row = Week;\n\n/**\n * @deprecated This type has been removed. Use `WeekProps` instead.\n * @protected\n */\nexport type RowProps = WeekProps;\n\n/**\n * @deprecated This type has been renamed. Use `PropsSingle` instead.\n * @protected\n */\nexport type DayPickerSingleProps = PropsSingle;\n\n/**\n * @deprecated This type has been renamed. Use `PropsMulti` instead.\n * @protected\n */\nexport type DayPickerMultipleProps = PropsMulti;\n\n/**\n * @deprecated This type has been renamed. Use `PropsRange` instead.\n * @protected\n */\nexport type DayPickerRangeProps = PropsRange;\n\n/**\n * @deprecated This type will be removed. Use `NonNullable<unknown>` instead\n * @protected\n */\nexport type DayPickerDefaultProps = NonNullable<unknown>;\n\n/**\n * @deprecated This type has been renamed. Use `Mode` instead.\n * @protected\n */\nexport type DaySelectionMode = Mode;\n\n/**\n * @deprecated This type will be removed. Use `string` instead;\n * @protected\n */\nexport type Modifier = string;\n\n/**\n * @deprecated This type will be removed. Use `SelectHandler<\"single\">` instead.\n * @protected\n */\nexport type SelectSingleEventHandler = PropsSingle[\"onSelect\"];\n\n/**\n * @deprecated This type will be removed. Use `SelectHandler<\"multiple\">`\n *   instead.\n * @protected\n */\nexport type SelectMultipleEventHandler = PropsMulti[\"onSelect\"];\n\n/**\n * @deprecated This type will be removed. Use `SelectHandler<\"range\">` instead.\n * @protected\n */\nexport type SelectRangeEventHandler = PropsRange[\"onSelect\"];\n\n/**\n * @deprecated This type is not used anymore.\n * @protected\n */\nexport type DayPickerProviderProps = any;\n\n/**\n * @deprecated This type has been removed to `useDayPicker`.\n * @protected\n * @group Hooks\n */\nexport const useNavigation = useDayPicker;\n\n/**\n * @deprecated This hook has been removed. Use a custom `Day` component instead.\n * @protected\n * @group Hooks\n * @see https://daypicker.dev/guides/custom-components\n */\nexport type useDayRender = any;\n\n/**\n * @deprecated This type is not used anymore.\n * @protected\n */\nexport type ContextProvidersProps = any;\n\n/**\n * @deprecated Use `typeof labelDayButton` instead.\n * @protected\n */\nexport type DayLabel = typeof labelDayButton;\n\n/**\n * @deprecated Use `typeof labelNext` or `typeof labelPrevious` instead.\n * @protected\n */\nexport type NavButtonLabel = typeof labelNext;\n\n/**\n * @deprecated Use `typeof labelWeekday` instead.\n * @protected\n */\nexport type WeekdayLabel = typeof labelWeekday;\n\n/**\n * @deprecated Use `typeof labelWeekNumber` instead.\n * @protected\n */\nexport type WeekNumberLabel = typeof labelWeekNumber;\n\n/**\n * @deprecated Use {@link DayMouseEventHandler} instead.\n * @protected\n */\nexport type DayClickEventHandler = DayEventHandler<React.MouseEvent>;\n\n/**\n * @deprecated This type will be removed. Use `DayEventHandler<React.FocusEvent\n *   | React.KeyboardEvent>` instead.\n * @protected\n */\nexport type DayFocusEventHandler = DayEventHandler<\n  React.FocusEvent | React.KeyboardEvent\n>;\n\n/**\n * @deprecated This type will be removed. Use\n *   `DayEventHandler<React.KeyboardEvent>` instead.\n * @protected\n */\nexport type DayKeyboardEventHandler = DayEventHandler<React.KeyboardEvent>;\n\n/**\n * @deprecated This type will be removed. Use\n *   `DayEventHandler<React.MouseEvent>` instead.\n * @protected\n */\nexport type DayMouseEventHandler = DayEventHandler<React.MouseEvent>;\n\n/**\n * @deprecated This type will be removed. Use\n *   `DayEventHandler<React.PointerEvent>` instead.\n * @protected\n */\nexport type DayPointerEventHandler = DayEventHandler<React.PointerEvent>;\n\n/**\n * @deprecated This type will be removed. Use\n *   `DayEventHandler<React.TouchEvent>` instead.\n * @protected\n */\nexport type DayTouchEventHandler = DayEventHandler<React.TouchEvent>;\n"],
  "mappings": "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",
  "names": ["import_react", "UI", "DayFlag", "SelectionState", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "import_react", "React", "import_react", "labelPrevious", "labelNext", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "import_react", "React", "defaultOptions", "format", "defaultOptions", "defaultOptions", "defaultOptions", "localize", "formatLong", "format", "defaultOptions", "constructFromSymbol", "format", "dateLib", "dateLib", "dateLib", "formatters", "dateLib", "addMonths", "startOfMonth", "isBefore", "month", "dateLib", "formatters", "dateLib", "startOfMonth", "startOfYear", "endOfYear", "addYears", "isBefore", "isSameYear", "year", "dateLib", "dateLib", "dateLib", "dateLib", "import_react", "dateLib", "startOfWeek", "endOfWeek", "startOfISOWeek", "endOfISOWeek", "addDays", "differenceInCalendarDays", "differenceInCalendarMonths", "isAfter", "endOfMonth", "initialDays", "weekDays", "dateLib", "dateLib", "differenceInCalendarMonths", "addMonths", "startOfMonth", "dateLib", "dateLib", "startOfWeek", "endOfWeek", "startOfISOWeek", "endOfISOWeek", "endOfMonth", "addDays", "getWeek", "getISOWeek", "weeks", "week", "dateLib", "startOfYear", "startOfDay", "startOfMonth", "endOfMonth", "addYears", "endOfYear", "dateLib", "startOfMonth", "addMonths", "differenceInCalendarMonths", "dateLib", "startOfMonth", "addMonths", "differenceInCalendarMonths", "import_react", "dateLib", "startOfMonth", "endOfMonth", "import_react", "dateLib", "differenceInCalendarDays", "isSameDay", "dateLib", "dateLib", "isSameDay", "differenceInCalendarDays", "isAfter", "dateLib", "addDays", "addMonths", "addYears", "addWeeks", "startOfISOWeek", "endOfISOWeek", "startOfWeek", "endOfWeek", "max", "min", "dateLib", "dateLib", "useFocus", "dateLib", "isSameDay", "isSameMonth", "isMatch", "days", "dateLib", "isSameDay", "min", "max", "min", "max", "dateLib", "isSameDay", "isAfter", "isBefore", "dateLib", "min", "max", "dateLib", "isSameDay", "dateLib", "formatters", "dateLib", "formatCaption", "formatDay", "formatMonthDropdown", "formatWeekNumber", "formatWeekNumberHeader", "formatWeekdayName", "formatYearDropdown", "labelDayButton", "labelGridcell", "labelGrid", "labelMonthDropdown", "labelNav", "labelWeekday", "labelWeekNumber", "labelWeekNumberHeader", "labelYearDropdown", "React", "style", "className"]
}
